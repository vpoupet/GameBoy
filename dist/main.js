/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cpu.js":
/*!********************!*\
  !*** ./src/cpu.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CPU\": () => (/* binding */ CPU)\n/* harmony export */ });\n/* harmony import */ var _opcodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./opcodes.js */ \"./src/opcodes.js\");\n\n\nclass CPU {\n    constructor(dmg) {\n        this.dmg = dmg;\n        this.mmu = dmg.mmu;\n\n        /**\n         * 8bit registers F A C B E D L H (followed by SP and PC)\n         * @type {Uint8Array}\n         */\n        this.registers = new Uint8Array(12);\n        /**\n         * 16bit registers AF BC DE HL SP PC\n         * @type {Uint16Array}\n         */\n        this.registers16 = new Uint16Array(this.registers.buffer);\n        /**\n         * Interrupt Master Enable Flag (IME)\n         * @type {boolean}\n         */\n        this.interruptMasterEnable = false;\n        this.previousInterruptMasterEnable = false;\n        this.clock = 0;\n        this.previousPC = new Array(5).fill(0);\n    }\n\n    // 8-bit registers getters and setters\n    get a() {\n        return this.registers[1];\n    }\n\n    set a(val) {\n        this.registers[1] = val;\n    }\n\n    get f() {\n        return this.registers[0] & 0xf0;\n    }\n\n    set f(val) {\n        this.registers[0] = val;\n    }\n\n    get b() {\n        return this.registers[3];\n    }\n\n    set b(val) {\n        this.registers[3] = val;\n    }\n\n    get c() {\n        return this.registers[2];\n    }\n\n    set c(val) {\n        this.registers[2] = val;\n    }\n\n    get d() {\n        return this.registers[5];\n    }\n\n    set d(val) {\n        this.registers[5] = val;\n    }\n\n    get e() {\n        return this.registers[4];\n    }\n\n    set e(val) {\n        this.registers[4] = val;\n    }\n\n    get h() {\n        return this.registers[7];\n    }\n\n    set h(val) {\n        this.registers[7] = val;\n    }\n\n    get l() {\n        return this.registers[6];\n    }\n\n    set l(val) {\n        this.registers[6] = val;\n    }\n\n    // 16-bit registers getters and setters\n    get af() {\n        return this.registers16[0] & 0xfff0;\n    }\n\n    set af(val) {\n        this.registers16[0] = val;\n    }\n\n    get bc() {\n        return this.registers16[1];\n    }\n\n    set bc(val) {\n        this.registers16[1] = val;\n    }\n\n    get de() {\n        return this.registers16[2];\n    }\n\n    set de(val) {\n        this.registers16[2] = val;\n    }\n\n    get hl() {\n        return this.registers16[3];\n    }\n\n    set hl(val) {\n        this.registers16[3] = val;\n    }\n\n    get sp() {\n        return this.registers16[4];\n    }\n\n    set sp(val) {\n        this.registers16[4] = val;\n    }\n\n    get pc() {\n        return this.registers16[5];\n    }\n\n    set pc(val) {\n        this.registers16[5] = val;\n    }\n\n    // Flags getters and setters\n    get flagZ() {\n        return this.registers[0] >> 7;\n    }\n\n    set flagZ(val) {\n        val ? this.registers[0] |= 0b10000000 : this.registers[0] &= 0b01111111;\n    }\n\n    get flagN() {\n        return (this.registers[0] >> 6) & 1;\n    }\n\n    set flagN(val) {\n        val ? this.registers[0] |= 0b01000000 : this.registers[0] &= 0b10111111;\n    }\n\n    get flagH() {\n        return (this.registers[0] >> 5) & 1;\n    }\n\n    set flagH(val) {\n        val ? this.registers[0] |= 0b00100000 : this.registers[0] &= 0b11011111;\n    }\n\n    get flagC() {\n        return (this.registers[0] >> 4) & 1;\n    }\n\n    set flagC(val) {\n        val ? this.registers[0] |= 0b00010000 : this.registers[0] &= 0b11101111;\n    }\n\n    exec() {\n        this.clock = 0;\n        // execute opcode at pc\n        this.previousPC.shift();\n        this.previousPC.push(this.pc);\n        _opcodes_js__WEBPACK_IMPORTED_MODULE_0__.opCodes[this.mmu.get(this.pc)].bind(this)();\n\n        // check for interrupts\n        const interruptMask = this.mmu.memory[0xffff] & this.mmu.memory[0xff0f] & 0x1f;\n        if (this.interruptMasterEnable && this.previousInterruptMasterEnable && interruptMask) {\n            // execute interrupt\n            for (let i = 0; i < 5; i++) {\n                if (interruptMask & (1 << i)) {\n                    this.mmu.memory[0xff0f] &= ~(1 << i); // reset IF flag\n                    this.interruptMasterEnable = false; // disable interrupts\n                    this.sp -= 2;\n                    this.mmu.set16(this.sp, this.pc);\n                    this.pc = 0x40 + (0x08 * i);\n                    this.clock += 20;\n                    break;\n                }\n            }\n        }\n        this.previousInterruptMasterEnable = this.interruptMasterEnable;\n        return this.clock;\n    }\n\n    reset() {\n        this.af = 0;\n        this.bc = 0;\n        this.de = 0;\n        this.hl = 0;\n        this.pc = 0;\n        this.sp = 0;\n        this.clock = 0;\n        this.interruptMasterEnable = false;\n        this.previousPC = new Array(5).fill(0);\n        // this.af = 0x01b0;\n        // this.bc = 0x0013;\n        // this.de = 0x00d8;\n        // this.hl = 0x014d;\n        // this.pc = 0x0100;\n    }\n}\n\n\n\n//# sourceURL=webpack://GameBoy/./src/cpu.js?");

/***/ }),

/***/ "./src/dmg.js":
/*!********************!*\
  !*** ./src/dmg.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DMG\": () => (/* binding */ DMG),\n/* harmony export */   \"hex\": () => (/* reexport safe */ _mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex),\n/* harmony export */   \"pressedKeys\": () => (/* binding */ pressedKeys)\n/* harmony export */ });\n/* harmony import */ var _cpu_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cpu.js */ \"./src/cpu.js\");\n/* harmony import */ var _mmu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mmu.js */ \"./src/mmu.js\");\n/* harmony import */ var _ppu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ppu.js */ \"./src/ppu.js\");\n/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./opcodes */ \"./src/opcodes.js\");\n\n\n\n\n\n\nconst pressedKeys = new Set();\n\n\nclass DMG {\n    constructor(romFile) {\n        this.mmu = new _mmu_js__WEBPACK_IMPORTED_MODULE_1__.MMU(this);\n        this.cpu = new _cpu_js__WEBPACK_IMPORTED_MODULE_0__.CPU(this);\n        this.ppu = new _ppu_js__WEBPACK_IMPORTED_MODULE_2__.PPU(this);\n        /**\n         * Clock counter\n         * @type {number}\n         */\n        this.clock = 0;\n        this.isNewFrame = false;\n        this.requestID = undefined;\n        this.lcdcStatus = false;\n\n        // open BIOS and Cartridge\n        Promise.all([\n            fetch(\"rom/dmg.bin\")\n                .then(response => response.arrayBuffer())\n                .then(data => {\n                    this.mmu.bios = new Uint8Array(data);\n                }),\n            fetch(romFile)\n                .then(response => response.arrayBuffer())\n                .then(data => {\n                    this.mmu.cartridge = new Uint8Array(data);\n                }),\n        ]).then(this.reset.bind(this));\n\n        this.viewAddress = 0;\n        this.serialOutput = [];\n    }\n\n    reset() {\n        this.clock = 0;\n        this.mmu.reset();\n        this.cpu.reset();\n        this.ppu.setDisplayEnabled(false);\n        this.updateInfo();\n    }\n\n    /**\n     * Updates the state of the Gameboy after a CPU instruction has been executed\n     * @param deltaClock {Number} duration (in clock cycles) of the executed CPU instruction\n     */\n    update(deltaClock) {\n        this.clock += deltaClock;\n\n        // FF00 - P1/JOYP - Joypad (R/W)\n        const previousInputs = this.mmu.memory[0xff00] & 0x0f;\n        let newInputs = 0x0f;\n        if ((this.mmu.memory[0xff00] & 0x20) === 0) {\n            // buttons selected\n            if (pressedKeys.has(\"q\")) this.mmu.memory[0xff00] &= 0xf7;  // Start\n            if (pressedKeys.has(\"w\")) this.mmu.memory[0xff00] &= 0xfb;  // Select\n            if (pressedKeys.has(\"f\")) this.mmu.memory[0xff00] &= 0xfd;  // B\n            if (pressedKeys.has(\"g\")) this.mmu.memory[0xff00] &= 0xfe;  // A\n        }\n        if ((this.mmu.memory[0xff00] & 0x10) === 0) {\n            // directions selected\n            if (pressedKeys.has(\"ArrowDown\")) this.mmu.memory[0xff00] &= 0xf7;  // Down\n            if (pressedKeys.has(\"ArrowUp\")) this.mmu.memory[0xff00] &= 0xfb;    // Up\n            if (pressedKeys.has(\"ArrowLeft\")) this.mmu.memory[0xff00] &= 0xfd;  // Left\n            if (pressedKeys.has(\"ArrowRight\")) this.mmu.memory[0xff00] &= 0xfe; // Right\n        }\n        this.mmu.memory[0xff00] = this.mmu.memory[0xff00] & 0xf0 | newInputs;\n        if (previousInputs & ~newInputs) {\n            this.mmu.memory[0xff0f] |= 0x08;    // request interrupt\n        }\n\n        // FF04 - DIV - Divider Register (R/W)\n        if ((this.clock & 0xff) - deltaClock < 0) {\n            this.mmu.memory[0xff04] += 1;\n        }\n        // FF05 - TIMA - Timer counter (R/W)\n        // FF06 - TMA - Timer Modulo (R/W)\n        // FF07 - TAC - Timer Control (R/W)\n        if (this.mmu.memory[0xff07] & 0x04) {\n            const timerControlFrequency = [1024, 16, 64, 256][this.mmu.memory[0xff07] & 0x03];\n            if ((this.clock % timerControlFrequency) - deltaClock < 0) {\n                if (this.mmu.memory[0xff05] === 0xff) {\n                    this.mmu.memory[0xff05] = this.mmu.memory[0xff06];\n                    this.mmu.memory[0xff0f] |= 0x04;    // request interrupt on bit 2\n                } else {\n                    this.mmu.memory[0xff05] += 1;\n                }\n            }\n        }\n\n        const lineClock = this.clock % 456;\n        const frameClock = this.clock % 70224;\n        // FF44 - LY - LCDC Y-Coordinate (R)\n        if (lineClock - deltaClock < 0) {\n            this.mmu.memory[0xff44] += 1;\n            this.mmu.memory[0xff44] %= 154;\n        }\n        const _ff44 = this.mmu.memory[0xff44];\n        // FF41 - STAT - LCDC Status (R/W)\n        // Update LCD Mode Flag (bits 0-1)\n        let mode;\n        if (frameClock >= 65664) {\n            mode = 1;   // V-blank (4560 cycles)\n            this.mmu.memory[0xff0f] |= 0x01;    // request V-Blank interrupt\n        } else if (lineClock < 80) {\n            mode = 2;   // Reading from OAM (80 cycles)\n        } else if (lineClock < 252) {\n            mode = 3;   // Reading from OAM and VRAM (172 cycles)\n        } else {\n            mode = 0;   // H-Blank (204 cycles)\n        }\n        this.mmu.memory[0xff41] = this.mmu.memory[0xff41] & 0xfc | mode;\n        // Draw line at beginning of mode 3\n        if (mode === 3 && lineClock - deltaClock < 80) {\n            this.ppu.drawLine(_ff44);\n        }\n        // Set this.isNewFrame at beginning of frame\n        if (frameClock - deltaClock < 0) {\n            this.isNewFrame = true;\n        }\n\n        // Update Coincidence Flag (bit 2)\n        if (_ff44 === this.mmu.memory[0xff45]) {\n            this.mmu.memory[0xff41] |= 0x04;    // set coincidence flag\n        } else {\n            this.mmu.memory[0xff41] &= 0xfb;    // reset coincidence flag\n        }\n        // Update Interrupts\n        const previousStatus = this.lcdcStatus;\n        const _ff41 = this.mmu.memory[0xff41];\n        this.lcdcStatus = (_ff41 & 0x40) && _ff44 === this.mmu.memory[0xff45]\n            || (_ff41 & 0x20) && (_ff41 & 0x03) === 2\n            || (_ff41 & 0x10) && (_ff41 & 0x03) === 1\n            || (_ff41 & 0x08) && (_ff41 & 0x03) === 0;\n        if (!previousStatus && this.lcdcStatus) {\n            this.mmu.memory[0xff0f] |= 0x02;    // request interrupt\n        }\n    }\n\n    cpuStep() {\n        const deltaTime = this.cpu.exec();\n        this.update(deltaTime);\n    }\n\n    execFrame() {\n        this.isNewFrame = false;\n        while (!this.isNewFrame) {\n            this.cpuStep();\n        }\n    }\n\n    start() {\n        this.execFrame();\n        this.requestID = requestAnimationFrame(this.start.bind(this));\n    }\n\n    stop() {\n        window.cancelAnimationFrame(this.requestID);\n        this.requestID = undefined;\n    }\n\n    updateInfo() {\n        // Clock\n        const cpuClock = document.getElementById(\"cpu-clock\");\n        cpuClock.innerHTML = `clk: ${this.clock}`;\n\n        // Registers\n        const cpuRegisters = document.getElementById(\"registers-row\");\n        cpuRegisters.innerHTML = `<td>${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.cpu.af, 4)}</td><td>${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.cpu.bc, 4)}</td><td>${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.cpu.de, 4)}</td><td>${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.cpu.hl, 4)}</td><td>${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.cpu.sp, 4)}</td><td>${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.cpu.pc, 4)}</td><td>${this.cpu.flagZ}${this.cpu.flagN}${this.cpu.flagH}${this.cpu.flagC}</td>`;\n\n        // Previous instructions\n        let instructions = [];\n        for (const addr of this.cpu.previousPC) {\n            const [instruction, length] = this.getASMInstruction(addr);\n            instructions.push(instruction);\n        }\n        document.getElementById(\"previous-asm\").innerHTML = '<pre>' + instructions.join('\\n') + '</pre>';\n        // Next instructions\n        instructions = [];\n        let addr = this.cpu.pc;\n        for (let i = 0; i < 10; i++) {\n            const [instruction, length] = this.getASMInstruction(addr);\n            instructions.push(instruction);\n            addr += length;\n        }\n        document.getElementById(\"asm\").innerHTML = '<pre>' + instructions.join('\\n') + '</pre>';\n\n        // Tiles and BG\n        this.ppu.displayTiles();\n        this.ppu.displayBG();\n        // Memory\n        this.updateMemoryView();\n    }\n\n    appendToSerialOutput(val) {\n        this.serialOutput.push(val);\n        document.getElementById(\"serial-output\").innerText += String.fromCharCode(val);\n    }\n    getASMInstruction(addr) {\n        let instruction = \"\";\n        const opCode = this.mmu.get(addr);\n        let description = _opcodes__WEBPACK_IMPORTED_MODULE_3__.asmCodes[opCode][0];\n        let [length, duration] = _opcodes__WEBPACK_IMPORTED_MODULE_3__.asmCodes[opCode][1].split(\"  \").map(parseInt);\n\n        if (opCode === 0xCB) {\n            const opCodeCB = this.mmu.get(addr + 1);\n            description = _opcodes__WEBPACK_IMPORTED_MODULE_3__.asmCodesCB[opCodeCB][0];\n            [length, duration] = _opcodes__WEBPACK_IMPORTED_MODULE_3__.asmCodesCB[opCodeCB][1].split(\"  \").map(parseInt);\n            length -= 1;\n        }\n        instruction += `${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(addr, 4)}: ${description}`;\n\n        if (length === 2) {\n            instruction += ` (${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.mmu.get(addr + 1), 2)})`;\n        } else if (length === 3) {\n            instruction += ` (${(0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.mmu.get16(addr + 1))})`;\n        }\n        return [instruction, length];\n    }\n\n    updateMemoryView() {\n        const lines = [];\n        for (let addr = this.viewAddress; addr < this.viewAddress + 0x100; addr += 0x10) {\n            const line = [\"0x\" + (0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(addr, 4) + \": \"];\n            for (let i = 0x00; i < 0x10; i++) {\n                line.push((0,_mmu_js__WEBPACK_IMPORTED_MODULE_1__.hex)(this.mmu.get(addr + i), 2));\n            }\n            lines.push('<tr><td>' + line.join('</td><td>') + '</td></tr>');\n        }\n\n        document.getElementById(\"memory-tbody\").innerHTML = lines.join(\"\");\n    }\n\n    setViewAddress(addr) {\n        if (Number.isNaN(addr)) {\n            this.viewAddress = 0;\n        } else {\n            this.viewAddress = Math.max(0, Math.min(0xff00, addr));\n            this.viewAddress >>= 3;\n            this.viewAddress <<= 3;\n        }\n        this.updateMemoryView();\n    }\n}\n\n\n\n\n//# sourceURL=webpack://GameBoy/./src/dmg.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dmg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dmg.js */ \"./src/dmg.js\");\n\n\n// const gb = new DMG(\"rom/01-special.gb\");\n// const gb = new DMG(\"rom/02-interrupts.gb\");\n// const gb = new DMG(\"rom/03-op sp,hl.gb\");\n// const gb = new DMG(\"rom/04-op r,imm.gb\");\n// const gb = new DMG(\"rom/05-op rp.gb\");  // passed\n// const gb = new DMG(\"rom/06-ld r,r.gb\"); // passed\n// const gb = new DMG(\"rom/07-jr,jp,call,ret,rst.gb\");\n// const gb = new DMG(\"rom/08-misc instrs.gb\");    // passed\n// const gb = new DMG(\"rom/09-op r,r.gb\");\n// const gb = new DMG(\"rom/10-bit ops.gb\");    // passed\n// const gb = new DMG(\"rom/11-op a,(hl).gb\");\n// const gb = new DMG(\"rom/cpu_test.gb\");\n// const gb = new DMG(\"rom/sml.gb\");\nconst gb = new _dmg_js__WEBPACK_IMPORTED_MODULE_0__.DMG(\"rom/tetris.gb\");\n\nwindow.gb = gb;\nconst SCREEN_WIDTH = 160;\nconst SCREEN_HEIGHT = 144;\n\n\nfunction runToBreak() {\n    let breakCondition = document.getElementById(\"break-condition\").value;\n    gb.ppu.enabled = false;\n    if (typeof eval(breakCondition) === \"number\") {\n        const addr = eval(breakCondition);\n        while (gb.cpu.pc !== addr) {\n            gb.cpuStep();\n        }\n    } else {\n        while (!eval(breakCondition)) {\n            gb.cpuStep();\n        }\n    }\n    gb.ppu.enabled = true;\n    gb.updateInfo();\n    console.log(\"Breakpoint reached\");\n}\n\n\nwindow.onload = function () {\n    const canvas = document.getElementById(\"screen\");\n    canvas.width = SCREEN_WIDTH;\n    canvas.height = SCREEN_HEIGHT;\n    gb.ppu.setContext(canvas.getContext('2d'));\n\n    const tilesCanvas = document.getElementById(\"tiles\");\n    tilesCanvas.width = 128;\n    tilesCanvas.height = 192;\n    const bgCanvas = document.getElementById(\"background\");\n    bgCanvas.width = 256;\n    bgCanvas.height = 256;\n\n    window.addEventListener(\"keydown\", e => {\n        _dmg_js__WEBPACK_IMPORTED_MODULE_0__.pressedKeys.add(e.key);\n    });\n    window.addEventListener(\"keyup\", e => {\n        _dmg_js__WEBPACK_IMPORTED_MODULE_0__.pressedKeys.delete(e.key);\n    });\n\n    const startButton = document.getElementById(\"start-button\");\n    startButton.addEventListener(\"click\", e => {\n        if (gb.requestID !== undefined) {\n            gb.stop();\n            startButton.innerHTML = \"Start\";\n            gb.updateInfo();\n        } else {\n            gb.start();\n            startButton.innerHTML = \"Stop\";\n        }\n    })\n    document.getElementById(\"frame-button\").addEventListener(\"click\", e => {\n        gb.execFrame();\n        gb.updateInfo();\n    });\n    document.getElementById(\"step-button\").addEventListener(\"click\", e => {\n        gb.cpuStep();\n        gb.updateInfo();\n    });\n    document.getElementById(\"reset-button\").addEventListener(\"click\", e => {\n        gb.stop();\n        startButton.innerHTML = \"Start\";\n        document.getElementById(\"serial-output\").innerText = \"\";\n        gb.reset();\n        gb.updateInfo();\n    });\n    document.getElementById(\"refresh-button\").addEventListener(\"click\", e => {\n        gb.updateInfo();\n    });\n    document.getElementById(\"break-condition\").addEventListener(\"keydown\", e => {\n        if (e.key === 'Enter') {\n            runToBreak();\n            gb.setViewAddress(parseInt(e.target.value, 16));\n        }\n    });\n    document.getElementById(\"break-button\").addEventListener(\"click\", e => {\n        runToBreak();\n    });\n    document.getElementById(\"address\").addEventListener(\"keydown\", e => {\n        if (e.key === 'Enter') {\n            gb.setViewAddress(parseInt(e.target.value, 16));\n        }\n    });\n    document.getElementById(\"address-down-button\").addEventListener(\"click\", e => {\n        gb.setViewAddress(gb.viewAddress + 0x80);\n    });\n    document.getElementById(\"address-up-button\").addEventListener(\"click\", e => {\n        gb.setViewAddress(gb.viewAddress - 0x80);\n    });\n};\n\n\n//# sourceURL=webpack://GameBoy/./src/index.js?");

/***/ }),

/***/ "./src/mmu.js":
/*!********************!*\
  !*** ./src/mmu.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MMU\": () => (/* binding */ MMU),\n/* harmony export */   \"hex\": () => (/* binding */ hex)\n/* harmony export */ });\nfunction hex(n, length = 4) {\n    const nString = n.toString(16);\n    return \"0\".repeat(length - nString.length) + nString;\n}\n\n\nclass MMU {\n    constructor(dmg) {\n        this.dmg = dmg;\n        /**\n         * 64KB Memory array\n         * @type {Uint8Array}\n         */\n        this.memory = new Uint8Array(new ArrayBuffer(0x10000));\n        /**\n         * 256 bytes array containing the BIOS instructions\n         * @type {Uint8Array}\n         */\n        this.bios = undefined;\n        /**\n         * Byte array containing the cartridge data (can be loaded into memory)\n         * @type {Uint8Array}\n         */\n        this.cartridge = undefined;\n    }\n\n    /**\n     * Get a byte from its memory address\n     * @param addr {number} memory address of the byte to read\n     * @returns {number} a byte\n     */\n    get(addr) {\n        switch (addr) {\n            case 0xff00:\n                // 0xFF00 - P1 - Joypad/Super Game Boy communication register\n                // U-1 U-1 W-0 W-0 R-x R-x R-x R-x\n                return (this.memory[addr] & 0x0f) | 0xc0;\n            case 0xff02:\n                // 0xFF02 - SC - Serial control register\n                // R/W-0 U-1 U-1 U-1 U-1 U-1 U-1 R/W-0\n                return (this.memory[addr] & 0x81) | 0x7e;\n            case 0xff41:\n                // 0xFF41 - LCDC - PPU status register\n                // U-1 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\n                return 0x80 | this.memory[addr];\n            case 0xff50:\n                // 0xFF50 - BOOT - Boot ROM lock register\n                // U-1 U-1 U-1 U-1 U-1 U-1 U-1 R/W-0\n                return (this.memory[0xff50] & 0x01) | 0xfe;\n            default:\n                if (0xE000 <= addr && addr < 0xFE00) {\n                    // E000 FDFF\tMirror of C000~DDFF (ECHO RAM)\tNintendo says use of this area is prohibited.\n                    return this.memory[addr - 0x2000];\n                } else if (0x8000 <= addr && addr < 0xa000) {\n                    // 8000\t9FFF\t8KB Video RAM (VRAM)\tOnly bank 0 in Non-CGB mode Switchable bank 0/1 in CGB mode\n                    // VRAM (memory at 8000h-9FFFh) is accessible during Mode 0-2\n                    if ((this.memory[0xff40] & 0x80) === 0 || (this.memory[0xff41] & 0x03) !== 0x03) {\n                        return this.memory[addr];\n                    } else {\n                        return 0xff;\n                    }\n                } else if (0xfe00 <= addr && addr < 0xfea0) {\n                    // FE00\tFE9F\tSprite attribute table (OAM)\n                    // OAM (memory at FE00h-FE9Fh) is accessible during Mode 0-1\n                    if ((this.memory[0xff40] & 0x80) === 0 || (this.memory[0xff41] & 0x02) === 0) {\n                        return this.memory[addr];\n                    } else {\n                        return 0xff;\n                    }\n                } else if (0xfea0 <= addr && addr < 0xff00) {\n                    // FEA0\tFEFF\tNot Usable\tNintendo says use of this area is prohibited\n                    return 0xff;\n                } else {\n                    return this.memory[addr];\n                }\n        }\n    }\n\n    /**\n     * Get a word (2 bytes) from its memory address\n     * @param addr {number} memory address of the word\n     * @returns {number} a word\n     */\n    get16(addr) {\n        return this.get(addr) | (this.get(addr + 1) << 8);\n    }\n\n    /**\n     * Set the value of a byte in memory\n     * @param addr {number} address of the byte to change\n     * @param val {number} value of the byte\n     */\n    set(addr, val) {\n        switch (addr) {\n            case 0xff00:\n                // FF00 - P1/JOYP - Joypad (R/W)\n                this.memory[addr] = (this.memory[addr] & 0xcf) | (val & 0x30);\n                break;\n            case 0xff01:\n                // FF01 - SB - Serial transfer data (R/W)\n                this.dmg.appendToSerialOutput(val);\n                this.memory[addr] = val;\n                break;\n            case 0xff04:\n                // FF04 - DIV - Divider Register (R/W)\n                // reset to 0 on write\n                this.memory[addr] = 0;\n                break;\n            case 0xff40:\n                // FF40 - LCD Control Register\n                // 7\tLCD Display Enable\t0=Off, 1=On\n                // 6\tWindow Tile Map Display Select\t0=9800-9BFF, 1=9C00-9FFF\n                // 5\tWindow Display Enable\t0=Off, 1=On\n                // 4\tBG & Window Tile Data Select\t0=8800-97FF, 1=8000-8FFF\n                // 3\tBG Tile Map Display Select\t0=9800-9BFF, 1=9C00-9FFF\n                // 2\tOBJ (Sprite) Size\t0=Off, 1=On\n                // 1\tOBJ (Sprite) Display Enable\t0=Off, 1=On\n                // 0\tBG/Window Display/Priority\t0=Off, 1=On\n                this.dmg.ppu.setDisplayEnabled(val & 0x80);\n                this.memory[addr] = val;\n                break;\n            case 0xff41:\n                // FF41 - STAT - LCDC Status (R/W)\n                // bit 7 is unused (always returns 1)\n                // bits 0-2 are read-only\n                this.memory[addr] = (val & 0xf8) | (this.memory[addr] & 0x07);\n                break;\n            case 0xff44:\n                // FF44 - LY - LCDC Y-Coordinate (R)\n                break;\n            case 0xff46:\n                // FF46 - DMA - DMA Transfer and Start Address (R/W)\n                const offset = val << 8;\n                for (let i = 0; i < 160; i++) {\n                    this.memory[0xfe00 + i] = this.memory[offset + i];\n                }\n                // TODO lock access to memory during 160 cycles\n                console.log('DMA');\n                break;\n            case 0xff50:\n                // FF50\t\tSet bit-0 to 1 to disable Boot ROM (can only transition from 0 to 1)\n                if ((this.memory[addr] & 0x01) === 0 && (val & 0x01) === 1) {\n                    for (let i = 0; i < 256; i++) {\n                        this.memory[i] = this.cartridge[i];\n                    }\n                    this.memory[addr] |= 0x01;\n                    console.log(\"Boot ROM disabled.\");\n                }\n                break;\n            default:\n                if (0x0000 <= addr && addr < 0x8000) {\n                    // 0000\t3FFF\t16KB ROM bank 00\tFrom cartridge, usually a fixed bank\n                    // 4000\t7FFF\t16KB ROM Bank 01~NN\tFrom cartridge, switchable bank via MB (if any)\n                    return;\n                } else if (0x8000 <= addr && addr < 0xa000) {\n                    // 8000\t9FFF\t8KB Video RAM (VRAM)\tOnly bank 0 in Non-CGB mode Switchable bank 0/1 in CGB mode\n                    // VRAM (memory at 8000h-9FFFh) is accessible during Mode 0-2\n                    if ((this.memory[0xff40] & 0x80) === 0 || (this.memory[0xff41] & 0x03) !== 0x03) {\n                        this.memory[addr] = val;\n                    }\n                } else if (0xe000 <= addr && addr < 0xfe00) {\n                    // E000 FDFF\tMirror of C000~DDFF (ECHO RAM)\tNintendo says use of this area is prohibited.\n                    this.memory[addr - 0x2000] = val;\n                } else if (0xfe00 <= addr && addr < 0xfea0) {\n                    // FE00\tFE9F\tSprite attribute table (OAM)\n                    // OAM (memory at FE00h-FE9Fh) is accessible during Mode 0-1\n                    if ((this.memory[0xff40] & 0x80) === 0 || (this.memory[0xff41] & 0x02) === 0) {\n                        this.memory[addr] = val;\n                    }\n                } else if (0xfea0 <= addr && addr < 0xff00) {\n                    // FEA0\tFEFF\tNot Usable\tNintendo says use of this area is prohibited\n                    return;\n                } else {\n                    this.memory[addr] = val;\n                }\n        }\n    }\n\n    /**\n     * Set the value of a word in memory\n     * @param addr {number} address of the word to change\n     * @param val {number} value of the word\n     */\n    set16(addr, val) {\n        this.set(addr, val);\n        this.set(addr + 1, val >> 8);\n    }\n\n    reset() {\n        this.memory[0xff00] = 0xff;\n        this.memory[0xff40] = 0;\n        for (let i = 0; i < 256; i++) {\n            this.memory[i] = this.bios[i];\n        }\n        for (let i = 256; i < 32768; i++) {\n            this.memory[i] = this.cartridge[i];\n        }\n        for (let i = 32768; i < 65536; i++) {\n            this.memory[i] = 0x00;\n        }\n    }\n\n    getRange(addr1, addr2) {\n        const values = [];\n        for (let i = addr1; i < addr2; i++) {\n            values.push(hex(this.memory[i], 2));\n        }\n        return values.join(\" \");\n    }\n}\n\n\n\n//# sourceURL=webpack://GameBoy/./src/mmu.js?");

/***/ }),

/***/ "./src/opcodes.js":
/*!************************!*\
  !*** ./src/opcodes.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opCodes\": () => (/* binding */ opCodes),\n/* harmony export */   \"opCodesCB\": () => (/* binding */ opCodesCB),\n/* harmony export */   \"asmCodes\": () => (/* binding */ asmCodes),\n/* harmony export */   \"asmCodesCB\": () => (/* binding */ asmCodesCB)\n/* harmony export */ });\nconst opCodes = [\n    function () {\n        // 00 - NOP\n        // 1 4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 01 - LD BC,d16\n        // 3  12\n        // - - - -\n        this.bc = this.mmu.get16(this.pc + 1);\n        this.pc += 3;\n        this.clock += 12;\n    },\n    function () {\n        // 02 - LD (BC),A\n        // 1  8\n        // - - - -\n        this.mmu.set(this.bc, this.a);\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // 03 - INC BC\n        // 1  8\n        // - - - -\n        this.bc += 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 04 - INC B\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.b & 0x0f) === 0x0f;\n        this.b += 1;\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 05 - DEC B\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.b & 0x0f) === 0;\n        this.b -= 1;\n        this.flagZ = this.b === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 06 - LD B,d8\n        // 2  8\n        // - - - -\n        this.b = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 07 - RLCA\n        // 1  4\n        // 0 0 0 C\n        this.flagC = this.a & 0x80;\n        this.a = (this.a << 1) | (this.a >> 7);\n        this.flagZ = 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 08 -\tLD (a16),SP\n        // 3  20\n        // - - - -\n        this.mmu.set16(this.mmu.get16(this.pc + 1), this.sp);\n        this.pc += 3;\n        this.clock += 20;\n    },\n    function () {\n        // 09 - ADD HL,BC\n        // 1  8\n        // - 0 H C\n        this.flagH = (this.hl & 0x0fff) + (this.bc & 0x0fff) > 0x0fff;\n        const r = this.hl + this.bc;\n        this.hl = r;\n        this.flagN = 0;\n        this.flagC = r > 0xffff;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 0A - LD A,(BC)\n        // 1  8\n        // - - - -\n        this.a = this.mmu.get(this.bc);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 0B - DEC BC\n        // 1  8\n        // - - - -\n        this.bc -= 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 0C - INC C\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.c & 0x0f) === 0x0f;\n        this.c += 1;\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 0D - DEC C\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.c & 0x0f) === 0;\n        this.c -= 1;\n        this.flagZ = this.c === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 0E - LD C,d8\n        // 2  8\n        // - - - -\n        this.c = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 0F - RRCA\n        // 1  4\n        // 0 0 0 C\n        this.flagC = this.a & 0x01;\n        this.a = (this.a >> 1) | (this.a << 7);\n        this.flagZ = 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 10 - STOP 0\n        // 2  4\n        // - - - -\n        // TODO STOP\n        throw new Error(\"Not Implemented\");\n        this.pc += 2;\n        this.clock += 4;\n    },\n    function () {\n        // 11 - LD DE,d16\n        // 3  12\n        // - - - -\n        this.de = this.mmu.get16(this.pc + 1);\n        this.pc += 3;\n        this.clock += 12;\n    },\n    function () {\n        // 12 - LD (DE),A\n        // 1  8\n        // - - - -\n        this.mmu.set(this.de, this.a);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 13 - INC DE\n        // 1  8\n        // - - - -\n        this.de += 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 14 - INC D\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.d & 0x0f) === 0x0f;\n        this.d += 1;\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 15 - DEC D\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.d & 0x0f) === 0;\n        this.d -= 1;\n        this.flagZ = this.d === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 16 - LD D,d8\n        // 2  8\n        // - - - -\n        this.d = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 17 - RLA\n        // 1  4\n        // 0 0 0 C\n        const r = (this.a << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.a = r;\n        this.flagZ = 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 18 - JR r8\n        // 2  12\n        // - - - -\n        // Hack: convert UInt8 to Int8 with << 24 >> 24\n        this.pc += 2 + (this.mmu.get(this.pc + 1) << 24 >> 24);\n        this.clock += 12;\n    },\n    function () {\n        // 19 - ADD HL,DE\n        // 1  8\n        // - 0 H C\n        this.flagH = (this.hl & 0x0fff) + (this.de & 0x0fff) > 0x0fff;\n        const r = this.hl + this.de;\n        this.hl = r;\n        this.flagN = 0;\n        this.flagC = r > 0xffff;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 1A - LD A,(DE)\n        // 1  8\n        // - - - -\n        this.a = this.mmu.get(this.de);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 1B - DEC DE\n        // 1  8\n        // - - - -\n        this.de -= 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 1C - INC E\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.e & 0x0f) === 0x0f;\n        this.e += 1;\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 1D - DEC E\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.e & 0x0f) === 0;\n        this.e -= 1;\n        this.flagZ = this.e === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 1E - LD E,d8\n        // 2  8\n        // - - - -\n        this.e = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 1F - RRA\n        // 1  4\n        // 0 0 0 C\n        const d0 = this.a & 0x01;\n        this.a = (this.a >> 1) | (this.flagC << 7);\n        this.flagZ = 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 20 - JR NZ,r8\n        // 2  12/8\n        // - - - -\n        if (!this.flagZ) {\n            // jump\n            this.pc += 2 + (this.mmu.get(this.pc + 1) << 24 >> 24);\n            this.clock += 12;\n        } else {\n            // don't jump\n            this.pc += 2;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // 21 - LD HL,d16\n        // 3  12\n        // - - - -\n        this.hl = this.mmu.get16(this.pc + 1);\n        this.pc += 3;\n        this.clock += 12;\n    },\n    function () {\n        // 22 - LD (HL+),A\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.a);\n        this.hl += 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 23 - INC HL\n        // 1  8\n        // - - - -\n        this.hl += 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 24 - INC H\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.h & 0x0f) === 0x0f;\n        this.h += 1;\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 25 - DEC H\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.h & 0x0f) === 0;\n        this.h -= 1;\n        this.flagZ = this.h === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 26 - LD H,d8\n        // 2  8\n        // - - - -\n        this.h = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 27 - DAA\n        // 1  4\n        // Z - 0 C\n        if (!this.flagN) {  // after an addition, adjust if (half-)carry occurred or if result is out of bounds\n            if (this.flagC || this.a > 0x99) {\n                this.a += 0x60;\n                this.flagC = 1;\n            }\n            if (this.flagH || (this.a & 0x0f) > 0x09) {\n                this.a += 0x06;\n            }\n        } else {  // after a subtraction, only adjust if (half-)carry occurred\n            if (this.flagC) {\n                this.a -= 0x60;\n            }\n            if (this.flagH) {\n                this.a -= 0x06;\n            }\n        }\n        this.flagZ = this.a === 0;\n        this.flagH = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 28 - JR Z,r8\n        // 2  12/8\n        // - - - -\n        if (this.flagZ) {\n            // jump\n            this.pc += 2 + (this.mmu.get(this.pc + 1) << 24 >> 24);\n            this.clock += 12;\n        } else {\n            // don't jump\n            this.pc += 2;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // 29 - ADD HL,HL\n        // 1  8\n        // - 0 H C\n        this.flagH = (this.hl & 0x0fff) + (this.hl & 0x0fff) > 0x0fff;\n        const r = this.hl + this.hl;\n        this.hl = r;\n        this.flagN = 0;\n        this.flagC = r > 0xffff;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 2A - LD A,(HL+)\n        // 1  8\n        // - - - -\n        this.a = this.mmu.get(this.hl);\n        this.hl += 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 2B - DEC HL\n        // 1  8\n        // - - - -\n        this.hl -= 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 2C - INC L\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.l & 0x0f) === 0x0f;\n        this.l += 1;\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 2D - DEC L\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.l & 0x0f) === 0;\n        this.l -= 1;\n        this.flagZ = this.l === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 2E - LD L,d8\n        // 2  8\n        // - - - -\n        this.l = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 2F - CPL\n        // 1  4\n        // - 1 1 -\n        this.flagN = 1;\n        this.flagH = 1;\n        this.a = ~this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 30 - JR NC,r8\n        // 2  12/8\n        // - - - -\n        if (!this.flagC) {\n            // jump\n            this.pc += 2 + (this.mmu.get(this.pc + 1) << 24 >> 24);\n            this.clock += 12;\n        } else {\n            // don't jump\n            this.pc += 2;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // 31 - LD SP,d16\n        // 3  12\n        // - - - -\n        this.sp = this.mmu.get16(this.pc + 1);\n        this.pc += 3;\n        this.clock += 12;\n    },\n    function () {\n        // 32 - LD (HL-),A\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.a);\n        this.hl -= 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 33 - INC SP\n        // 1  8\n        // - - - -\n        this.sp += 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 34 - INC (HL)\n        // 1  12\n        // Z 0 H -\n        const x = this.mmu.get(this.hl);\n        this.flagZ = x === 0xff;\n        this.flagN = 0;\n        this.flagH = (x & 0x0f) === 0x0f;\n        this.mmu.set(this.hl, x + 1);\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // 35 - DEC (HL)\n        // 1  12\n        // Z 1 H -\n        const x = this.mmu.get(this.hl);\n        this.flagZ = x === 0x01;\n        this.flagN = 0;\n        this.flagH = (x & 0x0f) === 0;\n        this.mmu.set(this.hl, x - 1);\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // 36 - LD (HL),d8\n        // 2  12\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.pc + 1));\n        this.pc += 2;\n        this.clock += 12;\n    },\n    function () {\n        // 37 - SCF\n        // 1  4\n        // - 0 0 1\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 38 - JR C,r8\n        // 2  12/8\n        // - - - -\n        if (this.flagC) {\n            // jump\n            this.pc += 2 + (this.mmu.get(this.pc + 1) << 24 >> 24);\n            this.clock += 12;\n        } else {\n            // don't jump\n            this.pc += 2;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // 39 - ADD HL,SP\n        // 1  8\n        // - 0 H C\n        this.flagH = (this.hl & 0x0fff) + (this.sp & 0x0fff) > 0x0fff;\n        const r = this.hl + this.sp;\n        this.hl = r;\n        this.flagN = 0;\n        this.flagC = r > 0xffff;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 3A - LD A,(HL-)\n        // 1  8\n        // - - - -\n        this.a = this.mmu.get(this.hl);\n        this.hl -= 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 3B - DEC SP\n        // 1  8\n        // - - - -\n        this.sp -= 1;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 3C - INC A\n        // 1  4\n        // Z 0 H -\n        this.flagH = (this.a & 0x0f) === 0x0f;\n        this.a += 1;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 3D - DEC A\n        // 1  4\n        // Z 1 H -\n        this.flagH = (this.a & 0x0f) === 0;\n        this.a -= 1;\n        this.flagZ = this.a === 0;\n        this.flagN = 1;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 3E - LD A,d8\n        // 2  8\n        // - - - -\n        this.a = this.mmu.get(this.pc + 1);\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 3F - CCF\n        // 1  4\n        // - 0 0 C\n        this.flagC = ~this.flagC;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 40 - LD B,B\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 41 - LD B,C\n        // 1  4\n        // - - - -\n        this.b = this.c;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 42 - LD B,D\n        // 1  4\n        // - - - -\n        this.b = this.d;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 43 - LD B,E\n        // 1  4\n        // - - - -\n        this.b = this.e;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 44 - LD B,H\n        // 1  4\n        // - - - -\n        this.b = this.h;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 45 - LD B,L\n        // 1  4\n        // - - - -\n        this.b = this.l;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 46 - LD B,(HL)\n        // 1  8\n        // - - - -\n        this.b = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 47 - LD B,A\n        // 1  4\n        // - - - -\n        this.b = this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 48 - LD C,B\n        // 1  4\n        // - - - -\n        this.c = this.b;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 49 - LD C,C\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 4A - LD C,D\n        // 1  4\n        // - - - -\n        this.c = this.d;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 4B - LD C,E\n        // 1  4\n        // - - - -\n        this.c = this.e;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 4C - LD C,H\n        // 1  4\n        // - - - -\n        this.c = this.h;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 4D - LD C,L\n        // 1  4\n        // - - - -\n        this.c = this.l;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 4E - LD C,(HL)\n        // 1  8\n        // - - - -\n        this.c = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 4F - LD C,A\n        // 1  4\n        // - - - -\n        this.c = this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 50 - LD D,B\n        // 1  4\n        // - - - -\n        this.d = this.b;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 51 - LD D,C\n        // 1  4\n        // - - - -\n        this.d = this.c;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 52 - LD D,D\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 53 - LD D,E\n        // 1  4\n        // - - - -\n        this.d = this.e;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 54 - LD D,H\n        // 1  4\n        // - - - -\n        this.d = this.h;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 55 - LD D,L\n        // 1  4\n        // - - - -\n        this.d = this.l;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 56 - LD D,(HL)\n        // 1  8\n        // - - - -\n        this.d = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 57 - LD D,A\n        // 1  4\n        // - - - -\n        this.d = this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 58 - LD E,B\n        // 1  4\n        // - - - -\n        this.e = this.b;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 59 - LD E,C\n        // 1  4\n        // - - - -\n        this.e = this.c;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 5A - LD E,D\n        // 1  4\n        // - - - -\n        this.e = this.d;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 5B - LD E,E\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 5C - LD E,H\n        // 1  4\n        // - - - -\n        this.e = this.h;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 5D - LD E,L\n        // 1  4\n        // - - - -\n        this.e = this.l;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 5E - LD E,(HL)\n        // 1  8\n        // - - - -\n        this.e = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 5F - LD E,A\n        // 1  4\n        // - - - -\n        this.e = this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 60 - LD H,B\n        // 1  4\n        // - - - -\n        this.h = this.b;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 61 - LD H,C\n        // 1  4\n        // - - - -\n        this.h = this.c;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 62 - LD H,D\n        // 1  4\n        // - - - -\n        this.h = this.d;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 63 - LD H,E\n        // 1  4\n        // - - - -\n        this.h = this.e;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 64 - LD H,H\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 65 - LD H,L\n        // 1  4\n        // - - - -\n        this.h = this.l;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 66 - LD H,(HL)\n        // 1  8\n        // - - - -\n        this.h = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 67 - LD H,A\n        // 1  4\n        // - - - -\n        this.h = this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 68 - LD L,B\n        // 1  4\n        // - - - -\n        this.l = this.b;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 69 - LD L,C\n        // 1  4\n        // - - - -\n        this.l = this.c;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 6A - LD L,D\n        // 1  4\n        // - - - -\n        this.l = this.d;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 6B - LD L,E\n        // 1  4\n        // - - - -\n        this.l = this.e;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 6C - LD L,H\n        // 1  4\n        // - - - -\n        this.l = this.h;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 6D - LD L,L\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 6E - LD L,(HL)\n        // 1  8\n        // - - - -\n        this.l = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 6F - LD L,A\n        // 1  4\n        // - - - -\n        this.l = this.a;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 70 - LD (HL),B\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.b);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 71 - LD (HL),C\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.c);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 72 - LD (HL),D\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.d);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 73 - LD (HL),E\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.e);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 74 - LD (HL),H\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.h);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 75 - LD (HL),L\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.l);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 76 - HALT\n        // 1  4\n        // - - - -\n        // TODO HALT\n        throw new Error(\"Not Implemented\");\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 77 - LD (HL),A\n        // 1  8\n        // - - - -\n        this.mmu.set(this.hl, this.a);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 78 - LD A,B\n        // 1  4\n        // - - - -\n        this.a = this.b;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 79 - LD A,C\n        // 1  4\n        // - - - -\n        this.a = this.c;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 7A - LD A,D\n        // 1  4\n        // - - - -\n        this.a = this.d;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 7B - LD A,E\n        // 1  4\n        // - - - -\n        this.a = this.e;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 7C - LD A,H\n        // 1  4\n        // - - - -\n        this.a = this.h;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 7D - LD A,L\n        // 1  4\n        // - - - -\n        this.a = this.l;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 7E - LD A,(HL)\n        // 1  8\n        // - - - -\n        this.a = this.mmu.get(this.hl);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 7F - LD A,A\n        // 1  4\n        // - - - -\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 80 - ADD A,B\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.b;\n        this.flagH = (this.a & 0x0f) + (this.b & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 81 - ADD A,C\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.c;\n        this.flagH = (this.a & 0x0f) + (this.c & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 82 - ADD A,D\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.d;\n        this.flagH = (this.a & 0x0f) + (this.d & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 83 - ADD A,E\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.e;\n        this.flagH = (this.a & 0x0f) + (this.e & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 84 - ADD A,H\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.h;\n        this.flagH = (this.a & 0x0f) + (this.h & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 85 - ADD A,L\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.l;\n        this.flagH = (this.a & 0x0f) + (this.l & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 86 - ADD A,(HL)\n        // 1  8\n        // Z 0 H C\n        const x = this.mmu.get(this.hl);\n        const r = this.a + x;\n        this.flagH = (this.a & 0x0f) + (x & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 87 - ADD A,A\n        // 1  4\n        // Z 0 H C\n        const r = this.a + this.a;\n        this.flagH = (this.a & 0x0f) + (this.a & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 88 - ADC A,B\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.b + cy;\n        this.flagH = (this.a & 0x0f) + (this.b & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 89 - ADC A,C\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.c + cy;\n        this.flagH = (this.a & 0x0f) + (this.c & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 8A - ADC A,D\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.d + cy;\n        this.flagH = (this.a & 0x0f) + (this.d & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 8B - ADC A,E\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.e + cy;\n        this.flagH = (this.a & 0x0f) + (this.e & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 8C - ADC A,H\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.h + cy;\n        this.flagH = (this.a & 0x0f) + (this.h & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 8D - ADC A,L\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.l + cy;\n        this.flagH = (this.a & 0x0f) + (this.l & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 8E - ADC A,(HL)\n        // 1  8\n        // Z 0 H C\n        const cy = this.flagC;\n        const x = this.mmu.get(this.hl);\n        const r = this.a + x + cy;\n        this.flagH = (this.a & 0x0f) + (x & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 8F - ADC A,A\n        // 1  4\n        // Z 0 H C\n        const cy = this.flagC;\n        const r = this.a + this.a + cy;\n        this.flagH = (this.a & 0x0f) + (this.a & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagN = 0;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 90 - SUB B\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.b;\n        this.flagH = (this.b & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 91 - SUB C\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.c;\n        this.flagH = (this.c & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 92 - SUB D\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.d;\n        this.flagH = (this.d & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 93 - SUB E\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.e;\n        this.flagH = (this.e & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 94 - SUB H\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.h;\n        this.flagH = (this.h & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 95 - SUB L\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.l;\n        this.flagH = (this.l & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 96 - SUB (HL)\n        // 1  8\n        // Z 1 H C\n        const x = this.mmu.get(this.hl);\n        const r = this.a - x;\n        this.flagH = (x & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // 97 - SUB A\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.a;\n        this.flagH = (this.a & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 98 - SBC A,B\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.b - cy;\n        this.flagH = (this.b & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 99 - SBC A,C\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.c - cy;\n        this.flagH = (this.c & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 9A - SBC A,D\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.d - cy;\n        this.flagH = (this.d & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 9B - SBC A,E\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.e - cy;\n        this.flagH = (this.e & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 9C - SBC A,H\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.h - cy;\n        this.flagH = (this.h & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 9D - SBC A,L\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.l - cy;\n        this.flagH = (this.l & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 9E - SBC A,(HL)\n        // 1  8\n        // Z 1 H C\n        const cy = this.flagC;\n        const x = this.mmu.get(this.hl);\n        const r = this.a - x - cy;\n        this.flagH = (x & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // 9F - SBC A,A\n        // 1  4\n        // Z 1 H C\n        const cy = this.flagC;\n        const r = this.a - this.a - cy;\n        this.flagH = (this.a & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A0 - AND B\n        // 1  4\n        // Z 0 1 0\n        this.a &= this.b;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A1 - AND C\n        // 1  4\n        // Z 0 1 0\n        this.a &= this.c;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A2 - AND D\n        // 1  4\n        // Z 0 1 0\n        this.a &= this.d;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A3 - AND E\n        // 1  4\n        // Z 0 1 0\n        this.a &= this.e;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A4 - AND H\n        // 1  4\n        // Z 0 1 0\n        this.a &= this.h;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A5 - AND L\n        // 1  4\n        // Z 0 1 0\n        this.a &= this.l;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A6 - AND (HL)\n        // 1  8\n        // Z 0 1 0\n        this.a &= this.mmu.get(this.hl);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // A7 - AND A\n        // 1  4\n        // Z 0 1 0\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A8 - XOR B\n        // 1  4\n        // Z 0 0 0\n        this.a ^= this.b;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // A9 - XOR C\n        // 1  4\n        // Z 0 0 0\n        this.a ^= this.c;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // AA - XOR D\n        // 1  4\n        // Z 0 0 0\n        this.a ^= this.d;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // AB - XOR E\n        // 1  4\n        // Z 0 0 0\n        this.a ^= this.e;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // AC - XOR H\n        // 1  4\n        // Z 0 0 0\n        this.a ^= this.h;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // AD - XOR L\n        // 1  4\n        // Z 0 0 0\n        this.a ^= this.l;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // AE - XOR (HL)\n        // 1  8\n        // Z 0 0 0\n        this.a ^= this.mmu.get(this.hl);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // AF - XOR A\n        // 1  4\n        // Z 0 0 0\n        this.a = 0;\n        this.flagZ = 1;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B0 - OR B\n        // 1  4\n        // Z 0 0 0\n        this.a |= this.b;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B1 - OR C\n        // 1  4\n        // Z 0 0 0\n        this.a |= this.c;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B2 - OR D\n        // 1  4\n        // Z 0 0 0\n        this.a |= this.d;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B3 - OR E\n        // 1  4\n        // Z 0 0 0\n        this.a |= this.e;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B4 - OR H\n        // 1  4\n        // Z 0 0 0\n        this.a |= this.h;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B5 - OR L\n        // 1  4\n        // Z 0 0 0\n        this.a |= this.l;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B6 - OR (HL)\n        // 1  8\n        // Z 0 0 0\n        this.a |= this.mmu.get(this.hl);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // B7 - OR A\n        // 1  4\n        // Z 0 0 0\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B8 - CP B\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.b;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (this.b & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // B9 - CP C\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.c;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (this.c & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // BA - CP D\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.d;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (this.d & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // BB - CP E\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.e;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (this.e & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // BC - CP H\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.h;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (this.h & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // BD - CP L\n        // 1  4\n        // Z 1 H C\n        const r = this.a - this.l;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (this.l & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // BE - CP (HL)\n        // 1  8\n        // Z 1 H C\n        const x = this.mmu.get(this.hl);\n        const r = this.a - x;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (x & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // BF - CP A\n        // 1  4\n        // Z 1 H C\n        this.flagZ = 1;\n        this.flagN = 1;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // C0 - RET NZ\n        // 1  20/8\n        // - - - -\n        if (!this.flagZ) {\n            // return\n            this.pc = this.mmu.get16(this.sp);\n            this.sp += 2;\n            this.clock += 20;\n        } else {\n            this.pc += 1;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // C1 - POP BC\n        // 1  12\n        // - - - -\n        this.bc = this.mmu.get16(this.sp);\n        this.sp += 2;\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // C2 - JP NZ,a16\n        // 3  16/12\n        // - - - -\n        if (!this.flagZ) {\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 16;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // C3 - JP a16\n        // 3  16\n        // - - - -\n        this.pc = this.mmu.get16(this.pc + 1);\n        this.clock += 16;\n    },\n    function () {\n        // C4 - CALL NZ,a16\n        // 3  24/12\n        // - - - -\n        if (!this.flagZ) {\n            this.sp -= 2;\n            this.mmu.set16(this.sp, this.pc + 3);\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 24;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // C5 - PUSH BC\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.bc);\n        this.pc += 1;\n        this.clock += 16;\n    },\n    function () {\n        // C6 - ADD A,d8\n        // 2  8\n        // Z 0 H C\n        const x = this.mmu.get(this.pc);\n        const r = this.a + x;\n        this.flagN = 0;\n        this.flagH = (this.a & 0x0f) + (x & 0x0f) > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagZ = this.a === 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C7 - RST 00H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x00;\n        this.clock += 16;\n    },\n    function () {\n        // C8 - RET Z\n        // 1  20/8\n        // - - - -\n        if (this.flagZ) {\n            // return\n            this.pc = this.mmu.get16(this.sp);\n            this.sp += 2;\n            this.clock += 20;\n        } else {\n            this.pc += 1;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // C9 - RET\n        // 1  16\n        // - - - -\n        this.pc = this.mmu.get16(this.sp);\n        this.sp += 2;\n        this.clock += 16;\n    },\n    function () {\n        // CA - JP Z,a16\n        // 3  16/12\n        // - - - -\n        if (this.flagZ) {\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 16;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // CB - PREFIX CB\n        // 2  4\n        // - - - -\n        opCodesCB[this.mmu.get(this.pc + 1)].bind(this)();\n    },\n    function () {\n        // CC - CALL Z,a16\n        // 3  24/12\n        // - - - -\n        if (this.flagZ) {\n            this.sp -= 2;\n            this.mmu.set16(this.sp, this.pc + 3);\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 24;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // CD - CALL a16\n        // 3  24\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 3);\n        this.pc = this.mmu.get16(this.pc + 1);\n        this.clock += 24;\n    },\n    function () {\n        // CE - ADC A,d8\n        // 2  8\n        // Z 0 H C\n        const cy = this.flagC;\n        const x = this.mmu.get(this.pc);\n        const r = this.a + x + cy;\n        this.flagN = 0;\n        this.flagH = (this.a & 0x0f) + (x & 0x0f) + cy > 0x0f;\n        this.flagC = r > 0xff;\n        this.a = r;\n        this.flagZ = this.a === 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // CF - RST 08H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x08;\n        this.clock += 16;\n    },\n    function () {\n        // D0 - RET NC\n        // 1  20/8\n        // - - - -\n        if (!this.flagC) {\n            // return\n            this.pc = this.mmu.get16(this.sp);\n            this.sp += 2;\n            this.clock += 20;\n        } else {\n            this.pc += 1;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // D1 - POP DE\n        // 1  12\n        // - - - -\n        this.de = this.mmu.get16(this.sp);\n        this.sp += 2;\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // D2 - JP NC,a16\n        // 3  16/12\n        // - - - -\n        if (!this.flagC) {\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 16;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // D3 - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // D4 - CALL NC,a16\n        // 3  24/12\n        // - - - -\n        if (!this.flagC) {\n            this.sp -= 2;\n            this.mmu.set16(this.sp, this.pc + 3);\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 24;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // D5 - PUSH DE\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.de);\n        this.pc += 1;\n        this.clock += 16;\n    },\n    function () {\n        // D6 - SUB d8\n        // 2  8\n        // Z 1 H C\n        const x = this.mmu.get(this.pc + 1);\n        const r = this.a - x;\n        this.flagH = (x & 0x0f) > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D7 - RST 10H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x10;\n        this.clock += 16;\n    },\n    function () {\n        // D8 - RET C\n        // 1  20/8\n        // - - - -\n        if (this.flagC) {\n            // return\n            this.pc = this.mmu.get16(this.sp);\n            this.sp += 2;\n            this.clock += 20;\n        } else {\n            this.pc += 1;\n            this.clock += 8;\n        }\n    },\n    function () {\n        // D9 - RETI\n        // 1  16\n        // - - - -\n        this.pc = this.mmu.get16(this.sp);\n        this.interruptMasterEnable = true;\n        this.sp += 2;\n        this.clock += 16;\n    },\n    function () {\n        // DA - JP C,a16\n        // 3  16/12\n        // - - - -\n        if (this.flagC) {\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 16;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // DB - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // DC - CALL C,a16\n        // 3  24/12\n        // - - - -\n        if (this.flagC) {\n            this.sp -= 2;\n            this.mmu.set16(this.sp, this.pc + 3);\n            this.pc = this.mmu.get16(this.pc + 1);\n            this.clock += 24;\n        } else {\n            this.pc += 3;\n            this.clock += 12;\n        }\n    },\n    function () {\n        // DD - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // DE - SBC A,d8\n        // 2  8\n        // Z 1 H C\n        const cy = this.flagC;\n        const x = this.mmu.get(this.pc + 1);\n        const r = this.a - x - cy;\n        this.flagH = (x & 0x0f) + cy > (this.a & 0x0f);\n        this.flagC = r < 0;\n        this.a = r;\n        this.flagN = 1;\n        this.flagZ = this.a === 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // DF - RST 18H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x18;\n        this.clock += 16;\n    },\n    function () {\n        // E0 - LDH (a8),A\n        // 2  12\n        // - - - -\n        this.mmu.set(0xff00 + this.mmu.get(this.pc + 1), this.a);\n        this.pc += 2;\n        this.clock += 12;\n    },\n    function () {\n        // E1 - POP HL\n        // 1  12\n        // - - - -\n        this.hl = this.mmu.get16(this.sp);\n        this.sp += 2;\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // E2 - LD (C),A\n        // 1  8\n        // - - - -\n        this.mmu.set(0xff00 + this.c, this.a);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // E3 - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // E4 - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // E5 - PUSH HL\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.hl);\n        this.pc += 1;\n        this.clock += 16;\n    },\n    function () {\n        // E6 - AND d8\n        // 2  8\n        // Z 0 1 0\n        this.a &= this.mmu.get(this.pc + 1);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 1;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E7 - RST 20H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x20;\n        this.clock += 16;\n    },\n    function () {\n        // E8 - ADD SP,r8\n        // 2  16\n        // 0 0 H C\n        const x = (this.mmu.get(this.pc + 1) << 24 >> 24)\n        // TODO Find out if flagH should be set when r8 is negative and addition produces a borrow\n        this.flagH = (this.sp & 0x0fff) + x > 0x0fff;\n        const r = this.sp + x;\n        this.sp = r;\n        this.flagZ = 0;\n        this.flagN = 0;\n        // TODO Find out if flagC should be set when r8 is negative and addition produces a borrow\n        this.flagC = r > 0xffff;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // E9 - JP (HL)\n        // 1  4\n        // - - - -\n        this.pc = this.hl;\n        this.clock += 4;\n    },\n    function () {\n        // EA - LD (a16),A\n        // 3  16\n        // - - - -\n        this.mmu.set(this.mmu.get16(this.pc + 1), this.a);\n        this.pc += 3;\n        this.clock += 16;\n    },\n    function () {\n        // EB - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // EC - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // ED - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // EE - XOR d8\n        // 2  8\n        // Z 0 0 0\n        this.a ^= this.mmu.get(this.pc + 1);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // EF - RST 28H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x28;\n        this.clock += 16;\n    },\n    function () {\n        // F0 - LDH A,(a8)\n        // 2  12\n        // - - - -\n        this.a = this.mmu.get(0xff00 + this.mmu.get(this.pc + 1));\n        this.pc += 2;\n        this.clock += 12;\n    },\n    function () {\n        // F1 - POP AF\n        // 1  12\n        // Z N H C\n        this.af = this.mmu.get16(this.sp);\n        this.sp += 2;\n        this.pc += 1;\n        this.clock += 12;\n    },\n    function () {\n        // F2 - LD A,(C)\n        // 1  8\n        // - - - -\n        this.a = this.mmu.get(0xff00 + this.c);\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // F3 - DI\n        // 1  4\n        // - - - -\n        this.interruptMasterEnable = false;\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // F4 - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // F5 - PUSH AF\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.af);\n        this.pc += 1;\n        this.clock += 16;\n    },\n    function () {\n        // F6 - OR d8\n        // 2  8\n        // Z 0 0 0\n        this.a |= this.mmu.get(this.pc + 1);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F7 - RST 30H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x30;\n        this.clock += 16;\n    },\n    function () {\n        // F8 - LD HL,SP+r8\n        // 2  12\n        // 0 0 H C\n        const x = this.mmu.get(this.pc + 1) << 24 >> 24;\n        this.hl = this.mmu.get16(this.sp + x);\n        this.flagZ = 0;\n        this.flagN = 0;\n        this.flagH = (this.sp & 0x0fff) + x > 0x0fff;\n        this.flagC = this.sp + x > 0xffff;\n        this.pc += 2;\n        this.clock += 12;\n    },\n    function () {\n        // F9 - LD SP,HL\n        // 1  8\n        // - - - -\n        this.sp = this.hl;\n        this.pc += 1;\n        this.clock += 8;\n    },\n    function () {\n        // FA - LD A,(a16)\n        // 3  16\n        // - - - -\n        this.a = this.mmu.get(this.mmu.get16(this.pc + 1));\n        this.pc += 3;\n        this.clock += 16;\n    },\n    function () {\n        // FB - EI\n        // 1  4\n        // - - - -\n        this.interruptMasterEnable = true\n        this.pc += 1;\n        this.clock += 4;\n    },\n    function () {\n        // FC - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // FD - Invalid OpCode\n        throw new Error(\"Invalid OpCode\");\n    },\n    function () {\n        // FE - CP d8\n        // 2  8\n        // Z 1 H C\n        const x = this.mmu.get(this.pc + 1);\n        const r = this.a - x;\n        this.flagZ = r === 0;\n        this.flagN = 1;\n        this.flagH = (this.a & 0x0f) < (x & 0x0f);\n        this.flagC = r < 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // FF - RST 38H\n        // 1  16\n        // - - - -\n        this.sp -= 2;\n        this.mmu.set16(this.sp, this.pc + 1);\n        this.pc = 0x38;\n        this.clock += 16;\n    },\n];\n\nconst opCodesCB = [\n    function () {\n        // 00 - RLC B\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.b & 0x80;\n        this.b = (this.b << 1) | (this.b >> 7);\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 01 - RLC C\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.c & 0x80;\n        this.c = (this.c << 1) | (this.c >> 7);\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 02 - RLC D\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.d & 0x80;\n        this.d = (this.d << 1) | (this.d >> 7);\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 03 - RLC E\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.e & 0x80;\n        this.e = (this.e << 1) | (this.e >> 7);\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 04 - RLC H\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.h & 0x80;\n        this.h = (this.h << 1) | (this.h >> 7);\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 05 - RLC L\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.l & 0x80;\n        this.l = (this.l << 1) | (this.l >> 7);\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 06 - RLC (HL)\n        // 2  16\n        // Z 0 0 C\n        const x = this.mmu.get(this.hl);\n        this.flagC = x & 0x80;\n        this.mmu.set(this.hl, (x << 1) | (x >> 7));\n        this.flagZ = x === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 07 - RLC A\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.a & 0x80;\n        this.a = (this.a << 1) | (this.a >> 7);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 08 - RRC B\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.b & 0x01;\n        this.b = (this.b >> 1) | (this.b << 7);\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 09 - RRC C\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.c & 0x01;\n        this.c = (this.c >> 1) | (this.c << 7);\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 0A - RRC D\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.d & 0x01;\n        this.d = (this.d >> 1) | (this.d << 7);\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 0B - RRC E\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.e & 0x01;\n        this.e = (this.e >> 1) | (this.e << 7);\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 0C - RRC H\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.h & 0x01;\n        this.h = (this.h >> 1) | (this.h << 7);\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 0D - RRC L\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.l & 0x01;\n        this.l = (this.l >> 1) | (this.l << 7);\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 0E - RRC (HL)\n        // 2  16\n        // Z 0 0 C\n        const x = this.mmu.get(this.hl);\n        this.flagC = x & 0x01;\n        this.mmu.set(this.hl, (x >> 1) | (x << 7));\n        this.flagZ = x === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 0F - RRC A\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.a & 0x01;\n        this.a = (this.a >> 1) | (this.a << 7);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 10 - RL B\n        // 2  8\n        // Z 0 0 C\n        const r = (this.b << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.b = r;\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 11 - RL C\n        // 2  8\n        // Z 0 0 C\n        const r = (this.c << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.c = r;\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 12 - RL D\n        // 2  8\n        // Z 0 0 C\n        const r = (this.d << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.d = r;\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 13 - RL E\n        // 2  8\n        // Z 0 0 C\n        const r = (this.e << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.e = r;\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 14 - RL H\n        // 2  8\n        // Z 0 0 C\n        const r = (this.h << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.h = r;\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 15 - RL L\n        // 2  8\n        // Z 0 0 C\n        const r = (this.l << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.l = r;\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 16 - RL (HL)\n        // 2  16\n        // Z 0 0 C\n        const r = (this.mmu.get(this.hl) << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.mmu.set(this.hl, r);\n        this.flagZ = (r & 0xff) === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 17 - RL A\n        // 2  8\n        // Z 0 0 C\n        const r = (this.a << 1) | this.flagC;\n        this.flagC = r & 0x100;\n        this.a = r;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 18 - RR B\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.b & 0x01;\n        this.b = (this.b >> 1) | (this.flagC << 7);\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 19 - RR C\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.c & 0x01;\n        this.c = (this.c >> 1) | (this.flagC << 7);\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 1A - RR D\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.d & 0x01;\n        this.d = (this.d >> 1) | (this.flagC << 7);\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 1B - RR E\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.e & 0x01;\n        this.e = (this.e >> 1) | (this.flagC << 7);\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 1C - RR H\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.h & 0x01;\n        this.h = (this.h >> 1) | (this.flagC << 7);\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 1D - RR L\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.l & 0x01;\n        this.l = (this.l >> 1) | (this.flagC << 7);\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 1E - RR (HL)\n        // 2  16\n        // Z 0 0 C\n        const x = this.mmu.get(this.hl);\n        const d0 = x & 0x01;\n        const r = (x >> 1) | (this.flagC << 7);\n        this.mmu.set(this.hl, r);\n        this.flagZ = (x & 0xff) === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 1F - RR A\n        // 2  8\n        // Z 0 0 C\n        const d0 = this.a & 0x01;\n        this.a = (this.a >> 1) | (this.flagC << 7);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = d0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 20 - SLA B\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.b & 0x80;\n        this.b = this.b << 1;\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 21 - SLA C\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.c & 0x80;\n        this.c = this.c << 1;\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 22 - SLA D\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.d & 0x80;\n        this.d = this.d << 1;\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 23 - SLA E\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.e & 0x80;\n        this.e = this.e << 1;\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 24 - SLA H\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.h & 0x80;\n        this.h = this.h << 1;\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 25 - SLA L\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.l & 0x80;\n        this.l = this.l << 1;\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 26 - SLA (HL)\n        // 2  16\n        // Z 0 0 C\n        const x = this.mmu.get(this.hl);\n        this.flagC = x & 0x80;\n        this.mmu.set(this.hl, x << 1);\n        this.flagZ = (x & 0x7f) === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 27 - SLA A\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.a & 0x80;\n        this.a = this.a << 1;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 28 - SRA B\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.b & 0x01;\n        this.b = (this.b >> 1) | (this.b & 0x80);\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 29 - SRA C\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.c & 0x01;\n        this.c = (this.c >> 1) | (this.c & 0x80);\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 2A - SRA D\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.d & 0x01;\n        this.d = (this.d >> 1) | (this.d & 0x80);\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 2B - SRA E\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.e & 0x01;\n        this.e = (this.e >> 1) | (this.e & 0x80);\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 2C - SRA H\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.h & 0x01;\n        this.h = (this.h >> 1) | (this.h & 0x80);\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 2D - SRA L\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.l & 0x01;\n        this.l = (this.l >> 1) | (this.l & 0x80);\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 2E - SRA (HL)\n        // 2  16\n        // Z 0 0 C\n        const x = this.mmu.get(this.hl);\n        this.flagC = x & 0x01;\n        this.mmu.set(this.hl, (x >> 1) | (x & 0x80));\n        this.flagZ = (x >> 1) === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 2F - SRA A\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.a & 0x01;\n        this.a = (this.a >> 1) | (this.a & 0x80);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 30 - SWAP B\n        // 2  8\n        // Z 0 0 0\n        this.b = (this.b << 4) | (this.b >> 4);\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 31 - SWAP C\n        // 2  8\n        // Z 0 0 0\n        this.c = (this.c << 4) | (this.c >> 4);\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 32 - SWAP D\n        // 2  8\n        // Z 0 0 0\n        this.d = (this.d << 4) | (this.d >> 4);\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 33 - SWAP E\n        // 2  8\n        // Z 0 0 0\n        this.e = (this.e << 4) | (this.e >> 4);\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 34 - SWAP H\n        // 2  8\n        // Z 0 0 0\n        this.h = (this.h << 4) | (this.h >> 4);\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 35 - SWAP L\n        // 2  8\n        // Z 0 0 0\n        this.l = (this.l << 4) | (this.l >> 4);\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 36 - SWAP (HL)\n        // 2  16\n        // Z 0 0 0\n        const x = this.mmu.get(this.hl);\n        this.set(this.hl, (x << 4) | (x >> 4));\n        this.flagZ = x === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 37 - SWAP A\n        // 2  8\n        // Z 0 0 0\n        this.a = (this.a << 4) | (this.a >> 4);\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.flagC = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 38 - SRL B\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.b & 0x01;\n        this.b = this.b >> 1;\n        this.flagZ = this.b === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 39 - SRL C\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.c & 0x01;\n        this.c = this.c >> 1;\n        this.flagZ = this.c === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 3A - SRL D\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.d & 0x01;\n        this.d = this.d >> 1;\n        this.flagZ = this.d === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 3B - SRL E\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.e & 0x01;\n        this.e = this.e >> 1;\n        this.flagZ = this.e === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 3C - SRL H\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.h & 0x01;\n        this.h = this.h >> 1;\n        this.flagZ = this.h === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 3D - SRL L\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.l & 0x01;\n        this.l = this.l >> 1;\n        this.flagZ = this.l === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 3E - SRL (HL)\n        // 2  16\n        // Z 0 0 C\n        const x = this.mmu.get(this.hl);\n        this.flagC = x & 0x01;\n        this.mmu.set(this.hl, x >> 1);\n        this.flagZ = (x >> 1) === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 3F - SRL A\n        // 2  8\n        // Z 0 0 C\n        this.flagC = this.a & 0x01;\n        this.a = this.a >> 1;\n        this.flagZ = this.a === 0;\n        this.flagN = 0;\n        this.flagH = 0;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 40 - BIT 0,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 41 - BIT 0,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 42 - BIT 0,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 43 - BIT 0,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 44 - BIT 0,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 45 - BIT 0,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 46 - BIT 0,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 47 - BIT 0,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x01);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 48 - BIT 1,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 49 - BIT 1,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 4A - BIT 1,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 4B - BIT 1,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 4C - BIT 1,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 4D - BIT 1,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 4E - BIT 1,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 4F - BIT 1,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x02);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 50 - BIT 2,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 51 - BIT 2,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 52 - BIT 2,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 53 - BIT 2,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 54 - BIT 2,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 55 - BIT 2,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 56 - BIT 2,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 57 - BIT 2,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x04);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 58 - BIT 3,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 59 - BIT 3,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 5A - BIT 3,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 5B - BIT 3,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 5C - BIT 3,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 5D - BIT 3,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 5E - BIT 3,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 5F - BIT 3,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x08);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 60 - BIT 4,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 61 - BIT 4,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 62 - BIT 4,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 63 - BIT 4,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 64 - BIT 4,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 65 - BIT 4,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 66 - BIT 4,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 67 - BIT 4,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x10);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 68 - BIT 5,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 69 - BIT 5,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 6A - BIT 5,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 6B - BIT 5,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 6C - BIT 5,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 6D - BIT 5,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 6E - BIT 5,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 6F - BIT 5,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x20);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 70 - BIT 6,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 71 - BIT 6,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 72 - BIT 6,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 73 - BIT 6,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 74 - BIT 6,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 75 - BIT 6,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 76 - BIT 6,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 77 - BIT 6,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x40);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 78 - BIT 7,B\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.b & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 79 - BIT 7,C\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.c & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 7A - BIT 7,D\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.d & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 7B - BIT 7,E\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.e & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 7C - BIT 7,H\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.h & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 7D - BIT 7,L\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.l & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 7E - BIT 7,(HL)\n        // 2  16\n        // Z 0 1 -\n        this.flagZ = !(this.mmu.get(this.hl) & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 7F - BIT 7,A\n        // 2  8\n        // Z 0 1 -\n        this.flagZ = !(this.a & 0x80);\n        this.flagN = 0;\n        this.flagH = 1;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 80 - RES 0,B\n        // 2  8\n        // - - - -\n        this.b &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 81 - RES 0,C\n        // 2  8\n        // - - - -\n        this.c &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 82 - RES 0,D\n        // 2  8\n        // - - - -\n        this.d &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 83 - RES 0,E\n        // 2  8\n        // - - - -\n        this.e &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 84 - RES 0,H\n        // 2  8\n        // - - - -\n        this.h &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 85 - RES 0,L\n        // 2  8\n        // - - - -\n        this.l &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 86 - RES 0,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xfe);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 87 - RES 0,A\n        // 2  8\n        // - - - -\n        this.a &= 0xfe;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 88 - RES 1,B\n        // 2  8\n        // - - - -\n        this.b &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 89 - RES 1,C\n        // 2  8\n        // - - - -\n        this.c &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 8A - RES 1,D\n        // 2  8\n        // - - - -\n        this.d &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 8B - RES 1,E\n        // 2  8\n        // - - - -\n        this.e &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 8C - RES 1,H\n        // 2  8\n        // - - - -\n        this.h &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 8D - RES 1,L\n        // 2  8\n        // - - - -\n        this.l &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 8E - RES 1,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xfd);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 8F - RES 1,A\n        // 2  8\n        // - - - -\n        this.a &= 0xfd;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 90 - RES 2,B\n        // 2  8\n        // - - - -\n        this.b &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 91 - RES 2,C\n        // 2  8\n        // - - - -\n        this.c &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 92 - RES 2,D\n        // 2  8\n        // - - - -\n        this.d &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 93 - RES 2,E\n        // 2  8\n        // - - - -\n        this.e &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 94 - RES 2,H\n        // 2  8\n        // - - - -\n        this.h &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 95 - RES 2,L\n        // 2  8\n        // - - - -\n        this.l &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 96 - RES 2,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xfb);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 97 - RES 2,A\n        // 2  8\n        // - - - -\n        this.a &= 0xfb;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 98 - RES 3,B\n        // 2  8\n        // - - - -\n        this.b &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 99 - RES 3,C\n        // 2  8\n        // - - - -\n        this.c &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 9A - RES 3,D\n        // 2  8\n        // - - - -\n        this.d &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 9B - RES 3,E\n        // 2  8\n        // - - - -\n        this.e &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 9C - RES 3,H\n        // 2  8\n        // - - - -\n        this.h &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 9D - RES 3,L\n        // 2  8\n        // - - - -\n        this.l &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // 9E - RES 3,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xf7);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // 9F - RES 3,A\n        // 2  8\n        // - - - -\n        this.a &= 0xf7;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A0 - RES 4,B\n        // 2  8\n        // - - - -\n        this.b &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A1 - RES 4,C\n        // 2  8\n        // - - - -\n        this.c &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A2 - RES 4,D\n        // 2  8\n        // - - - -\n        this.d &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A3 - RES 4,E\n        // 2  8\n        // - - - -\n        this.e &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A4 - RES 4,H\n        // 2  8\n        // - - - -\n        this.h &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A5 - RES 4,L\n        // 2  8\n        // - - - -\n        this.l &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A6 - RES 4,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xef);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // A7 - RES 4,A\n        // 2  8\n        // - - - -\n        this.a &= 0xef;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A8 - RES 5,B\n        // 2  8\n        // - - - -\n        this.b &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // A9 - RES 5,C\n        // 2  8\n        // - - - -\n        this.c &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // AA - RES 5,D\n        // 2  8\n        // - - - -\n        this.d &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // AB - RES 5,E\n        // 2  8\n        // - - - -\n        this.e &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // AC - RES 5,H\n        // 2  8\n        // - - - -\n        this.h &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // AD - RES 5,L\n        // 2  8\n        // - - - -\n        this.l &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // AE - RES 5,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xdf);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // AF - RES 5,A\n        // 2  8\n        // - - - -\n        this.a &= 0xdf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B0 - RES 6,B\n        // 2  8\n        // - - - -\n        this.b &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B1 - RES 6,C\n        // 2  8\n        // - - - -\n        this.c &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B2 - RES 6,D\n        // 2  8\n        // - - - -\n        this.d &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B3 - RES 6,E\n        // 2  8\n        // - - - -\n        this.e &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B4 - RES 6,H\n        // 2  8\n        // - - - -\n        this.h &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B5 - RES 6,L\n        // 2  8\n        // - - - -\n        this.l &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B6 - RES 6,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0xbf);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // B7 - RES 6,A\n        // 2  8\n        // - - - -\n        this.a &= 0xbf;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B8 - RES 7,B\n        // 2  8\n        // - - - -\n        this.b &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // B9 - RES 7,C\n        // 2  8\n        // - - - -\n        this.c &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // BA - RES 7,D\n        // 2  8\n        // - - - -\n        this.d &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // BB - RES 7,E\n        // 2  8\n        // - - - -\n        this.e &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // BC - RES 7,H\n        // 2  8\n        // - - - -\n        this.h &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // BD - RES 7,L\n        // 2  8\n        // - - - -\n        this.l &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // BE - RES 7,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) & 0x7f);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // BF - RES 7,A\n        // 2  8\n        // - - - -\n        this.a &= 0x7f;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C0 - SET 0,B\n        // 2  8\n        // - - - -\n        this.b |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C1 - SET 0,C\n        // 2  8\n        // - - - -\n        this.c |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C2 - SET 0,D\n        // 2  8\n        // - - - -\n        this.d |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C3 - SET 0,E\n        // 2  8\n        // - - - -\n        this.e |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C4 - SET 0,H\n        // 2  8\n        // - - - -\n        this.h |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C5 - SET 0,L\n        // 2  8\n        // - - - -\n        this.l |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C6 - SET 0,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x01);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // C7 - SET 0,A\n        // 2  8\n        // - - - -\n        this.a |= 0x01;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C8 - SET 1,B\n        // 2  8\n        // - - - -\n        this.b |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // C9 - SET 1,C\n        // 2  8\n        // - - - -\n        this.c |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // CA - SET 1,D\n        // 2  8\n        // - - - -\n        this.d |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // CB - SET 1,E\n        // 2  8\n        // - - - -\n        this.e |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // CC - SET 1,H\n        // 2  8\n        // - - - -\n        this.h |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // CD - SET 1,L\n        // 2  8\n        // - - - -\n        this.l |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // CE - SET 1,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x02);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // CF - SET 1,A\n        // 2  8\n        // - - - -\n        this.a |= 0x02;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D0 - SET 2,B\n        // 2  8\n        // - - - -\n        this.b |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D1 - SET 2,C\n        // 2  8\n        // - - - -\n        this.c |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D2 - SET 2,D\n        // 2  8\n        // - - - -\n        this.d |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D3 - SET 2,E\n        // 2  8\n        // - - - -\n        this.e |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D4 - SET 2,H\n        // 2  8\n        // - - - -\n        this.h |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D5 - SET 2,L\n        // 2  8\n        // - - - -\n        this.l |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D6 - SET 2,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x04);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // D7 - SET 2,A\n        // 2  8\n        // - - - -\n        this.a |= 0x04;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D8 - SET 3,B\n        // 2  8\n        // - - - -\n        this.b |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // D9 - SET 3,C\n        // 2  8\n        // - - - -\n        this.c |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // DA - SET 3,D\n        // 2  8\n        // - - - -\n        this.d |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // DB - SET 3,E\n        // 2  8\n        // - - - -\n        this.e |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // DC - SET 3,H\n        // 2  8\n        // - - - -\n        this.h |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // DD - SET 3,L\n        // 2  8\n        // - - - -\n        this.l |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // DE - SET 3,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x08);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // DF - SET 3,A\n        // 2  8\n        // - - - -\n        this.a |= 0x08;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E0 - SET 4,B\n        // 2  8\n        // - - - -\n        this.b |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E1 - SET 4,C\n        // 2  8\n        // - - - -\n        this.c |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E2 - SET 4,D\n        // 2  8\n        // - - - -\n        this.d |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E3 - SET 4,E\n        // 2  8\n        // - - - -\n        this.e |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E4 - SET 4,H\n        // 2  8\n        // - - - -\n        this.h |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E5 - SET 4,L\n        // 2  8\n        // - - - -\n        this.l |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E6 - SET 4,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x10);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // E7 - SET 4,A\n        // 2  8\n        // - - - -\n        this.a |= 0x10;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E8 - SET 5,B\n        // 2  8\n        // - - - -\n        this.b |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // E9 - SET 5,C\n        // 2  8\n        // - - - -\n        this.c |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // EA - SET 5,D\n        // 2  8\n        // - - - -\n        this.d |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // EB - SET 5,E\n        // 2  8\n        // - - - -\n        this.e |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // EC - SET 5,H\n        // 2  8\n        // - - - -\n        this.h |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // ED - SET 5,L\n        // 2  8\n        // - - - -\n        this.l |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // EE - SET 5,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x20);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // EF - SET 5,A\n        // 2  8\n        // - - - -\n        this.a |= 0x20;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F0 - SET 6,B\n        // 2  8\n        // - - - -\n        this.b |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F1 - SET 6,C\n        // 2  8\n        // - - - -\n        this.c |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F2 - SET 6,D\n        // 2  8\n        // - - - -\n        this.d |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F3 - SET 6,E\n        // 2  8\n        // - - - -\n        this.e |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F4 - SET 6,H\n        // 2  8\n        // - - - -\n        this.h |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F5 - SET 6,L\n        // 2  8\n        // - - - -\n        this.l |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F6 - SET 6,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x40);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // F7 - SET 6,A\n        // 2  8\n        // - - - -\n        this.a |= 0x40;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F8 - SET 7,B\n        // 2  8\n        // - - - -\n        this.b |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // F9 - SET 7,C\n        // 2  8\n        // - - - -\n        this.c |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // FA - SET 7,D\n        // 2  8\n        // - - - -\n        this.d |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // FB - SET 7,E\n        // 2  8\n        // - - - -\n        this.e |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // FC - SET 7,H\n        // 2  8\n        // - - - -\n        this.h |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // FD - SET 7,L\n        // 2  8\n        // - - - -\n        this.l |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n    function () {\n        // FE - SET 7,(HL)\n        // 2  16\n        // - - - -\n        this.mmu.set(this.hl, this.mmu.get(this.hl) | 0x80);\n        this.pc += 2;\n        this.clock += 16;\n    },\n    function () {\n        // FF - SET 7,A\n        // 2  8\n        // - - - -\n        this.a |= 0x80;\n        this.pc += 2;\n        this.clock += 8;\n    },\n];\n\nconst asmCodes = [[\"NOP\", \"1  4\", \"- - - -\"],[\"LD BC,d16\", \"3  12\", \"- - - -\"],[\"LD (BC),A\", \"1  8\", \"- - - -\"],[\"INC BC\", \"1  8\", \"- - - -\"],[\"INC B\", \"1  4\", \"Z 0 H -\"],[\"DEC B\", \"1  4\", \"Z 1 H -\"],[\"LD B,d8\", \"2  8\", \"- - - -\"],[\"RLCA\", \"1  4\", \"0 0 0 C\"],[\"LD (a16),SP\", \"3  20\", \"- - - -\"],[\"ADD HL,BC\", \"1  8\", \"- 0 H C\"],[\"LD A,(BC)\", \"1  8\", \"- - - -\"],[\"DEC BC\", \"1  8\", \"- - - -\"],[\"INC C\", \"1  4\", \"Z 0 H -\"],[\"DEC C\", \"1  4\", \"Z 1 H -\"],[\"LD C,d8\", \"2  8\", \"- - - -\"],[\"RRCA\", \"1  4\", \"0 0 0 C\"],[\"STOP 0\", \"2  4\", \"- - - -\"],[\"LD DE,d16\", \"3  12\", \"- - - -\"],[\"LD (DE),A\", \"1  8\", \"- - - -\"],[\"INC DE\", \"1  8\", \"- - - -\"],[\"INC D\", \"1  4\", \"Z 0 H -\"],[\"DEC D\", \"1  4\", \"Z 1 H -\"],[\"LD D,d8\", \"2  8\", \"- - - -\"],[\"RLA\", \"1  4\", \"0 0 0 C\"],[\"JR r8\", \"2  12\", \"- - - -\"],[\"ADD HL,DE\", \"1  8\", \"- 0 H C\"],[\"LD A,(DE)\", \"1  8\", \"- - - -\"],[\"DEC DE\", \"1  8\", \"- - - -\"],[\"INC E\", \"1  4\", \"Z 0 H -\"],[\"DEC E\", \"1  4\", \"Z 1 H -\"],[\"LD E,d8\", \"2  8\", \"- - - -\"],[\"RRA\", \"1  4\", \"0 0 0 C\"],[\"JR NZ,r8\", \"2  12/8\", \"- - - -\"],[\"LD HL,d16\", \"3  12\", \"- - - -\"],[\"LD (HL+),A\", \"1  8\", \"- - - -\"],[\"INC HL\", \"1  8\", \"- - - -\"],[\"INC H\", \"1  4\", \"Z 0 H -\"],[\"DEC H\", \"1  4\", \"Z 1 H -\"],[\"LD H,d8\", \"2  8\", \"- - - -\"],[\"DAA\", \"1  4\", \"Z - 0 C\"],[\"JR Z,r8\", \"2  12/8\", \"- - - -\"],[\"ADD HL,HL\", \"1  8\", \"- 0 H C\"],[\"LD A,(HL+)\", \"1  8\", \"- - - -\"],[\"DEC HL\", \"1  8\", \"- - - -\"],[\"INC L\", \"1  4\", \"Z 0 H -\"],[\"DEC L\", \"1  4\", \"Z 1 H -\"],[\"LD L,d8\", \"2  8\", \"- - - -\"],[\"CPL\", \"1  4\", \"- 1 1 -\"],[\"JR NC,r8\", \"2  12/8\", \"- - - -\"],[\"LD SP,d16\", \"3  12\", \"- - - -\"],[\"LD (HL-),A\", \"1  8\", \"- - - -\"],[\"INC SP\", \"1  8\", \"- - - -\"],[\"INC (HL)\", \"1  12\", \"Z 0 H -\"],[\"DEC (HL)\", \"1  12\", \"Z 1 H -\"],[\"LD (HL),d8\", \"2  12\", \"- - - -\"],[\"SCF\", \"1  4\", \"- 0 0 1\"],[\"JR C,r8\", \"2  12/8\", \"- - - -\"],[\"ADD HL,SP\", \"1  8\", \"- 0 H C\"],[\"LD A,(HL-)\", \"1  8\", \"- - - -\"],[\"DEC SP\", \"1  8\", \"- - - -\"],[\"INC A\", \"1  4\", \"Z 0 H -\"],[\"DEC A\", \"1  4\", \"Z 1 H -\"],[\"LD A,d8\", \"2  8\", \"- - - -\"],[\"CCF\", \"1  4\", \"- 0 0 C\"],[\"LD B,B\", \"1  4\", \"- - - -\"],[\"LD B,C\", \"1  4\", \"- - - -\"],[\"LD B,D\", \"1  4\", \"- - - -\"],[\"LD B,E\", \"1  4\", \"- - - -\"],[\"LD B,H\", \"1  4\", \"- - - -\"],[\"LD B,L\", \"1  4\", \"- - - -\"],[\"LD B,(HL)\", \"1  8\", \"- - - -\"],[\"LD B,A\", \"1  4\", \"- - - -\"],[\"LD C,B\", \"1  4\", \"- - - -\"],[\"LD C,C\", \"1  4\", \"- - - -\"],[\"LD C,D\", \"1  4\", \"- - - -\"],[\"LD C,E\", \"1  4\", \"- - - -\"],[\"LD C,H\", \"1  4\", \"- - - -\"],[\"LD C,L\", \"1  4\", \"- - - -\"],[\"LD C,(HL)\", \"1  8\", \"- - - -\"],[\"LD C,A\", \"1  4\", \"- - - -\"],[\"LD D,B\", \"1  4\", \"- - - -\"],[\"LD D,C\", \"1  4\", \"- - - -\"],[\"LD D,D\", \"1  4\", \"- - - -\"],[\"LD D,E\", \"1  4\", \"- - - -\"],[\"LD D,H\", \"1  4\", \"- - - -\"],[\"LD D,L\", \"1  4\", \"- - - -\"],[\"LD D,(HL)\", \"1  8\", \"- - - -\"],[\"LD D,A\", \"1  4\", \"- - - -\"],[\"LD E,B\", \"1  4\", \"- - - -\"],[\"LD E,C\", \"1  4\", \"- - - -\"],[\"LD E,D\", \"1  4\", \"- - - -\"],[\"LD E,E\", \"1  4\", \"- - - -\"],[\"LD E,H\", \"1  4\", \"- - - -\"],[\"LD E,L\", \"1  4\", \"- - - -\"],[\"LD E,(HL)\", \"1  8\", \"- - - -\"],[\"LD E,A\", \"1  4\", \"- - - -\"],[\"LD H,B\", \"1  4\", \"- - - -\"],[\"LD H,C\", \"1  4\", \"- - - -\"],[\"LD H,D\", \"1  4\", \"- - - -\"],[\"LD H,E\", \"1  4\", \"- - - -\"],[\"LD H,H\", \"1  4\", \"- - - -\"],[\"LD H,L\", \"1  4\", \"- - - -\"],[\"LD H,(HL)\", \"1  8\", \"- - - -\"],[\"LD H,A\", \"1  4\", \"- - - -\"],[\"LD L,B\", \"1  4\", \"- - - -\"],[\"LD L,C\", \"1  4\", \"- - - -\"],[\"LD L,D\", \"1  4\", \"- - - -\"],[\"LD L,E\", \"1  4\", \"- - - -\"],[\"LD L,H\", \"1  4\", \"- - - -\"],[\"LD L,L\", \"1  4\", \"- - - -\"],[\"LD L,(HL)\", \"1  8\", \"- - - -\"],[\"LD L,A\", \"1  4\", \"- - - -\"],[\"LD (HL),B\", \"1  8\", \"- - - -\"],[\"LD (HL),C\", \"1  8\", \"- - - -\"],[\"LD (HL),D\", \"1  8\", \"- - - -\"],[\"LD (HL),E\", \"1  8\", \"- - - -\"],[\"LD (HL),H\", \"1  8\", \"- - - -\"],[\"LD (HL),L\", \"1  8\", \"- - - -\"],[\"HALT\", \"1  4\", \"- - - -\"],[\"LD (HL),A\", \"1  8\", \"- - - -\"],[\"LD A,B\", \"1  4\", \"- - - -\"],[\"LD A,C\", \"1  4\", \"- - - -\"],[\"LD A,D\", \"1  4\", \"- - - -\"],[\"LD A,E\", \"1  4\", \"- - - -\"],[\"LD A,H\", \"1  4\", \"- - - -\"],[\"LD A,L\", \"1  4\", \"- - - -\"],[\"LD A,(HL)\", \"1  8\", \"- - - -\"],[\"LD A,A\", \"1  4\", \"- - - -\"],[\"ADD A,B\", \"1  4\", \"Z 0 H C\"],[\"ADD A,C\", \"1  4\", \"Z 0 H C\"],[\"ADD A,D\", \"1  4\", \"Z 0 H C\"],[\"ADD A,E\", \"1  4\", \"Z 0 H C\"],[\"ADD A,H\", \"1  4\", \"Z 0 H C\"],[\"ADD A,L\", \"1  4\", \"Z 0 H C\"],[\"ADD A,(HL)\", \"1  8\", \"Z 0 H C\"],[\"ADD A,A\", \"1  4\", \"Z 0 H C\"],[\"ADC A,B\", \"1  4\", \"Z 0 H C\"],[\"ADC A,C\", \"1  4\", \"Z 0 H C\"],[\"ADC A,D\", \"1  4\", \"Z 0 H C\"],[\"ADC A,E\", \"1  4\", \"Z 0 H C\"],[\"ADC A,H\", \"1  4\", \"Z 0 H C\"],[\"ADC A,L\", \"1  4\", \"Z 0 H C\"],[\"ADC A,(HL)\", \"1  8\", \"Z 0 H C\"],[\"ADC A,A\", \"1  4\", \"Z 0 H C\"],[\"SUB B\", \"1  4\", \"Z 1 H C\"],[\"SUB C\", \"1  4\", \"Z 1 H C\"],[\"SUB D\", \"1  4\", \"Z 1 H C\"],[\"SUB E\", \"1  4\", \"Z 1 H C\"],[\"SUB H\", \"1  4\", \"Z 1 H C\"],[\"SUB L\", \"1  4\", \"Z 1 H C\"],[\"SUB (HL)\", \"1  8\", \"Z 1 H C\"],[\"SUB A\", \"1  4\", \"Z 1 H C\"],[\"SBC A,B\", \"1  4\", \"Z 1 H C\"],[\"SBC A,C\", \"1  4\", \"Z 1 H C\"],[\"SBC A,D\", \"1  4\", \"Z 1 H C\"],[\"SBC A,E\", \"1  4\", \"Z 1 H C\"],[\"SBC A,H\", \"1  4\", \"Z 1 H C\"],[\"SBC A,L\", \"1  4\", \"Z 1 H C\"],[\"SBC A,(HL)\", \"1  8\", \"Z 1 H C\"],[\"SBC A,A\", \"1  4\", \"Z 1 H C\"],[\"AND B\", \"1  4\", \"Z 0 1 0\"],[\"AND C\", \"1  4\", \"Z 0 1 0\"],[\"AND D\", \"1  4\", \"Z 0 1 0\"],[\"AND E\", \"1  4\", \"Z 0 1 0\"],[\"AND H\", \"1  4\", \"Z 0 1 0\"],[\"AND L\", \"1  4\", \"Z 0 1 0\"],[\"AND (HL)\", \"1  8\", \"Z 0 1 0\"],[\"AND A\", \"1  4\", \"Z 0 1 0\"],[\"XOR B\", \"1  4\", \"Z 0 0 0\"],[\"XOR C\", \"1  4\", \"Z 0 0 0\"],[\"XOR D\", \"1  4\", \"Z 0 0 0\"],[\"XOR E\", \"1  4\", \"Z 0 0 0\"],[\"XOR H\", \"1  4\", \"Z 0 0 0\"],[\"XOR L\", \"1  4\", \"Z 0 0 0\"],[\"XOR (HL)\", \"1  8\", \"Z 0 0 0\"],[\"XOR A\", \"1  4\", \"Z 0 0 0\"],[\"OR B\", \"1  4\", \"Z 0 0 0\"],[\"OR C\", \"1  4\", \"Z 0 0 0\"],[\"OR D\", \"1  4\", \"Z 0 0 0\"],[\"OR E\", \"1  4\", \"Z 0 0 0\"],[\"OR H\", \"1  4\", \"Z 0 0 0\"],[\"OR L\", \"1  4\", \"Z 0 0 0\"],[\"OR (HL)\", \"1  8\", \"Z 0 0 0\"],[\"OR A\", \"1  4\", \"Z 0 0 0\"],[\"CP B\", \"1  4\", \"Z 1 H C\"],[\"CP C\", \"1  4\", \"Z 1 H C\"],[\"CP D\", \"1  4\", \"Z 1 H C\"],[\"CP E\", \"1  4\", \"Z 1 H C\"],[\"CP H\", \"1  4\", \"Z 1 H C\"],[\"CP L\", \"1  4\", \"Z 1 H C\"],[\"CP (HL)\", \"1  8\", \"Z 1 H C\"],[\"CP A\", \"1  4\", \"Z 1 H C\"],[\"RET NZ\", \"1  20/8\", \"- - - -\"],[\"POP BC\", \"1  12\", \"- - - -\"],[\"JP NZ,a16\", \"3  16/12\", \"- - - -\"],[\"JP a16\", \"3  16\", \"- - - -\"],[\"CALL NZ,a16\", \"3  24/12\", \"- - - -\"],[\"PUSH BC\", \"1  16\", \"- - - -\"],[\"ADD A,d8\", \"2  8\", \"Z 0 H C\"],[\"RST 00H\", \"1  16\", \"- - - -\"],[\"RET Z\", \"1  20/8\", \"- - - -\"],[\"RET\", \"1  16\", \"- - - -\"],[\"JP Z,a16\", \"3  16/12\", \"- - - -\"],[\"PREFIX CB\", \"1  4\", \"- - - -\"],[\"CALL Z,a16\", \"3  24/12\", \"- - - -\"],[\"CALL a16\", \"3  24\", \"- - - -\"],[\"ADC A,d8\", \"2  8\", \"Z 0 H C\"],[\"RST 08H\", \"1  16\", \"- - - -\"],[\"RET NC\", \"1  20/8\", \"- - - -\"],[\"POP DE\", \"1  12\", \"- - - -\"],[\"JP NC,a16\", \"3  16/12\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"CALL NC,a16\", \"3  24/12\", \"- - - -\"],[\"PUSH DE\", \"1  16\", \"- - - -\"],[\"SUB d8\", \"2  8\", \"Z 1 H C\"],[\"RST 10H\", \"1  16\", \"- - - -\"],[\"RET C\", \"1  20/8\", \"- - - -\"],[\"RETI\", \"1  16\", \"- - - -\"],[\"JP C,a16\", \"3  16/12\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"CALL C,a16\", \"3  24/12\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"SBC A,d8\", \"2  8\", \"Z 1 H C\"],[\"RST 18H\", \"1  16\", \"- - - -\"],[\"LDH (a8),A\", \"2  12\", \"- - - -\"],[\"POP HL\", \"1  12\", \"- - - -\"],[\"LD (C),A\", \"1  8\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"PUSH HL\", \"1  16\", \"- - - -\"],[\"AND d8\", \"2  8\", \"Z 0 1 0\"],[\"RST 20H\", \"1  16\", \"- - - -\"],[\"ADD SP,r8\", \"2  16\", \"0 0 H C\"],[\"JP (HL)\", \"1  4\", \"- - - -\"],[\"LD (a16),A\", \"3  16\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"XOR d8\", \"2  8\", \"Z 0 0 0\"],[\"RST 28H\", \"1  16\", \"- - - -\"],[\"LDH A,(a8)\", \"2  12\", \"- - - -\"],[\"POP AF\", \"1  12\", \"Z N H C\"],[\"LD A,(C)\", \"1  8\", \"- - - -\"],[\"DI\", \"1  4\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"PUSH AF\", \"1  16\", \"- - - -\"],[\"OR d8\", \"2  8\", \"Z 0 0 0\"],[\"RST 30H\", \"1  16\", \"- - - -\"],[\"LD HL,SP+r8\", \"2  12\", \"0 0 H C\"],[\"LD SP,HL\", \"1  8\", \"- - - -\"],[\"LD A,(a16)\", \"3  16\", \"- - - -\"],[\"EI\", \"1  4\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"ERR\", \"1  0\", \"- - - -\"],[\"CP d8\", \"2  8\", \"Z 1 H C\"],[\"RST 38H\", \"1  16\", \"- - - -\"],];\n\nconst asmCodesCB = [[\"RLC B\", \"2  8\", \"Z 0 0 C\"],[\"RLC C\", \"2  8\", \"Z 0 0 C\"],[\"RLC D\", \"2  8\", \"Z 0 0 C\"],[\"RLC E\", \"2  8\", \"Z 0 0 C\"],[\"RLC H\", \"2  8\", \"Z 0 0 C\"],[\"RLC L\", \"2  8\", \"Z 0 0 C\"],[\"RLC (HL)\", \"2  16\", \"Z 0 0 C\"],[\"RLC A\", \"2  8\", \"Z 0 0 C\"],[\"RRC B\", \"2  8\", \"Z 0 0 C\"],[\"RRC C\", \"2  8\", \"Z 0 0 C\"],[\"RRC D\", \"2  8\", \"Z 0 0 C\"],[\"RRC E\", \"2  8\", \"Z 0 0 C\"],[\"RRC H\", \"2  8\", \"Z 0 0 C\"],[\"RRC L\", \"2  8\", \"Z 0 0 C\"],[\"RRC (HL)\", \"2  16\", \"Z 0 0 C\"],[\"RRC A\", \"2  8\", \"Z 0 0 C\"],[\"RL B\", \"2  8\", \"Z 0 0 C\"],[\"RL C\", \"2  8\", \"Z 0 0 C\"],[\"RL D\", \"2  8\", \"Z 0 0 C\"],[\"RL E\", \"2  8\", \"Z 0 0 C\"],[\"RL H\", \"2  8\", \"Z 0 0 C\"],[\"RL L\", \"2  8\", \"Z 0 0 C\"],[\"RL (HL)\", \"2  16\", \"Z 0 0 C\"],[\"RL A\", \"2  8\", \"Z 0 0 C\"],[\"RR B\", \"2  8\", \"Z 0 0 C\"],[\"RR C\", \"2  8\", \"Z 0 0 C\"],[\"RR D\", \"2  8\", \"Z 0 0 C\"],[\"RR E\", \"2  8\", \"Z 0 0 C\"],[\"RR H\", \"2  8\", \"Z 0 0 C\"],[\"RR L\", \"2  8\", \"Z 0 0 C\"],[\"RR (HL)\", \"2  16\", \"Z 0 0 C\"],[\"RR A\", \"2  8\", \"Z 0 0 C\"],[\"SLA B\", \"2  8\", \"Z 0 0 C\"],[\"SLA C\", \"2  8\", \"Z 0 0 C\"],[\"SLA D\", \"2  8\", \"Z 0 0 C\"],[\"SLA E\", \"2  8\", \"Z 0 0 C\"],[\"SLA H\", \"2  8\", \"Z 0 0 C\"],[\"SLA L\", \"2  8\", \"Z 0 0 C\"],[\"SLA (HL)\", \"2  16\", \"Z 0 0 C\"],[\"SLA A\", \"2  8\", \"Z 0 0 C\"],[\"SRA B\", \"2  8\", \"Z 0 0 0\"],[\"SRA C\", \"2  8\", \"Z 0 0 0\"],[\"SRA D\", \"2  8\", \"Z 0 0 0\"],[\"SRA E\", \"2  8\", \"Z 0 0 0\"],[\"SRA H\", \"2  8\", \"Z 0 0 0\"],[\"SRA L\", \"2  8\", \"Z 0 0 0\"],[\"SRA (HL)\", \"2  16\", \"Z 0 0 0\"],[\"SRA A\", \"2  8\", \"Z 0 0 0\"],[\"SWAP B\", \"2  8\", \"Z 0 0 0\"],[\"SWAP C\", \"2  8\", \"Z 0 0 0\"],[\"SWAP D\", \"2  8\", \"Z 0 0 0\"],[\"SWAP E\", \"2  8\", \"Z 0 0 0\"],[\"SWAP H\", \"2  8\", \"Z 0 0 0\"],[\"SWAP L\", \"2  8\", \"Z 0 0 0\"],[\"SWAP (HL)\", \"2  16\", \"Z 0 0 0\"],[\"SWAP A\", \"2  8\", \"Z 0 0 0\"],[\"SRL B\", \"2  8\", \"Z 0 0 C\"],[\"SRL C\", \"2  8\", \"Z 0 0 C\"],[\"SRL D\", \"2  8\", \"Z 0 0 C\"],[\"SRL E\", \"2  8\", \"Z 0 0 C\"],[\"SRL H\", \"2  8\", \"Z 0 0 C\"],[\"SRL L\", \"2  8\", \"Z 0 0 C\"],[\"SRL (HL)\", \"2  16\", \"Z 0 0 C\"],[\"SRL A\", \"2  8\", \"Z 0 0 C\"],[\"BIT 0,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 0,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 0,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 0,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 0,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 0,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 0,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 0,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 1,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 1,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 2,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 2,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 3,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 3,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 4,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 4,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 5,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 5,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 6,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 6,A\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,B\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,C\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,D\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,E\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,H\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,L\", \"2  8\", \"Z 0 1 -\"],[\"BIT 7,(HL)\", \"2  16\", \"Z 0 1 -\"],[\"BIT 7,A\", \"2  8\", \"Z 0 1 -\"],[\"RES 0,B\", \"2  8\", \"- - - -\"],[\"RES 0,C\", \"2  8\", \"- - - -\"],[\"RES 0,D\", \"2  8\", \"- - - -\"],[\"RES 0,E\", \"2  8\", \"- - - -\"],[\"RES 0,H\", \"2  8\", \"- - - -\"],[\"RES 0,L\", \"2  8\", \"- - - -\"],[\"RES 0,(HL)\", \"2  16\", \"- - - -\"],[\"RES 0,A\", \"2  8\", \"- - - -\"],[\"RES 1,B\", \"2  8\", \"- - - -\"],[\"RES 1,C\", \"2  8\", \"- - - -\"],[\"RES 1,D\", \"2  8\", \"- - - -\"],[\"RES 1,E\", \"2  8\", \"- - - -\"],[\"RES 1,H\", \"2  8\", \"- - - -\"],[\"RES 1,L\", \"2  8\", \"- - - -\"],[\"RES 1,(HL)\", \"2  16\", \"- - - -\"],[\"RES 1,A\", \"2  8\", \"- - - -\"],[\"RES 2,B\", \"2  8\", \"- - - -\"],[\"RES 2,C\", \"2  8\", \"- - - -\"],[\"RES 2,D\", \"2  8\", \"- - - -\"],[\"RES 2,E\", \"2  8\", \"- - - -\"],[\"RES 2,H\", \"2  8\", \"- - - -\"],[\"RES 2,L\", \"2  8\", \"- - - -\"],[\"RES 2,(HL)\", \"2  16\", \"- - - -\"],[\"RES 2,A\", \"2  8\", \"- - - -\"],[\"RES 3,B\", \"2  8\", \"- - - -\"],[\"RES 3,C\", \"2  8\", \"- - - -\"],[\"RES 3,D\", \"2  8\", \"- - - -\"],[\"RES 3,E\", \"2  8\", \"- - - -\"],[\"RES 3,H\", \"2  8\", \"- - - -\"],[\"RES 3,L\", \"2  8\", \"- - - -\"],[\"RES 3,(HL)\", \"2  16\", \"- - - -\"],[\"RES 3,A\", \"2  8\", \"- - - -\"],[\"RES 4,B\", \"2  8\", \"- - - -\"],[\"RES 4,C\", \"2  8\", \"- - - -\"],[\"RES 4,D\", \"2  8\", \"- - - -\"],[\"RES 4,E\", \"2  8\", \"- - - -\"],[\"RES 4,H\", \"2  8\", \"- - - -\"],[\"RES 4,L\", \"2  8\", \"- - - -\"],[\"RES 4,(HL)\", \"2  16\", \"- - - -\"],[\"RES 4,A\", \"2  8\", \"- - - -\"],[\"RES 5,B\", \"2  8\", \"- - - -\"],[\"RES 5,C\", \"2  8\", \"- - - -\"],[\"RES 5,D\", \"2  8\", \"- - - -\"],[\"RES 5,E\", \"2  8\", \"- - - -\"],[\"RES 5,H\", \"2  8\", \"- - - -\"],[\"RES 5,L\", \"2  8\", \"- - - -\"],[\"RES 5,(HL)\", \"2  16\", \"- - - -\"],[\"RES 5,A\", \"2  8\", \"- - - -\"],[\"RES 6,B\", \"2  8\", \"- - - -\"],[\"RES 6,C\", \"2  8\", \"- - - -\"],[\"RES 6,D\", \"2  8\", \"- - - -\"],[\"RES 6,E\", \"2  8\", \"- - - -\"],[\"RES 6,H\", \"2  8\", \"- - - -\"],[\"RES 6,L\", \"2  8\", \"- - - -\"],[\"RES 6,(HL)\", \"2  16\", \"- - - -\"],[\"RES 6,A\", \"2  8\", \"- - - -\"],[\"RES 7,B\", \"2  8\", \"- - - -\"],[\"RES 7,C\", \"2  8\", \"- - - -\"],[\"RES 7,D\", \"2  8\", \"- - - -\"],[\"RES 7,E\", \"2  8\", \"- - - -\"],[\"RES 7,H\", \"2  8\", \"- - - -\"],[\"RES 7,L\", \"2  8\", \"- - - -\"],[\"RES 7,(HL)\", \"2  16\", \"- - - -\"],[\"RES 7,A\", \"2  8\", \"- - - -\"],[\"SET 0,B\", \"2  8\", \"- - - -\"],[\"SET 0,C\", \"2  8\", \"- - - -\"],[\"SET 0,D\", \"2  8\", \"- - - -\"],[\"SET 0,E\", \"2  8\", \"- - - -\"],[\"SET 0,H\", \"2  8\", \"- - - -\"],[\"SET 0,L\", \"2  8\", \"- - - -\"],[\"SET 0,(HL)\", \"2  16\", \"- - - -\"],[\"SET 0,A\", \"2  8\", \"- - - -\"],[\"SET 1,B\", \"2  8\", \"- - - -\"],[\"SET 1,C\", \"2  8\", \"- - - -\"],[\"SET 1,D\", \"2  8\", \"- - - -\"],[\"SET 1,E\", \"2  8\", \"- - - -\"],[\"SET 1,H\", \"2  8\", \"- - - -\"],[\"SET 1,L\", \"2  8\", \"- - - -\"],[\"SET 1,(HL)\", \"2  16\", \"- - - -\"],[\"SET 1,A\", \"2  8\", \"- - - -\"],[\"SET 2,B\", \"2  8\", \"- - - -\"],[\"SET 2,C\", \"2  8\", \"- - - -\"],[\"SET 2,D\", \"2  8\", \"- - - -\"],[\"SET 2,E\", \"2  8\", \"- - - -\"],[\"SET 2,H\", \"2  8\", \"- - - -\"],[\"SET 2,L\", \"2  8\", \"- - - -\"],[\"SET 2,(HL)\", \"2  16\", \"- - - -\"],[\"SET 2,A\", \"2  8\", \"- - - -\"],[\"SET 3,B\", \"2  8\", \"- - - -\"],[\"SET 3,C\", \"2  8\", \"- - - -\"],[\"SET 3,D\", \"2  8\", \"- - - -\"],[\"SET 3,E\", \"2  8\", \"- - - -\"],[\"SET 3,H\", \"2  8\", \"- - - -\"],[\"SET 3,L\", \"2  8\", \"- - - -\"],[\"SET 3,(HL)\", \"2  16\", \"- - - -\"],[\"SET 3,A\", \"2  8\", \"- - - -\"],[\"SET 4,B\", \"2  8\", \"- - - -\"],[\"SET 4,C\", \"2  8\", \"- - - -\"],[\"SET 4,D\", \"2  8\", \"- - - -\"],[\"SET 4,E\", \"2  8\", \"- - - -\"],[\"SET 4,H\", \"2  8\", \"- - - -\"],[\"SET 4,L\", \"2  8\", \"- - - -\"],[\"SET 4,(HL)\", \"2  16\", \"- - - -\"],[\"SET 4,A\", \"2  8\", \"- - - -\"],[\"SET 5,B\", \"2  8\", \"- - - -\"],[\"SET 5,C\", \"2  8\", \"- - - -\"],[\"SET 5,D\", \"2  8\", \"- - - -\"],[\"SET 5,E\", \"2  8\", \"- - - -\"],[\"SET 5,H\", \"2  8\", \"- - - -\"],[\"SET 5,L\", \"2  8\", \"- - - -\"],[\"SET 5,(HL)\", \"2  16\", \"- - - -\"],[\"SET 5,A\", \"2  8\", \"- - - -\"],[\"SET 6,B\", \"2  8\", \"- - - -\"],[\"SET 6,C\", \"2  8\", \"- - - -\"],[\"SET 6,D\", \"2  8\", \"- - - -\"],[\"SET 6,E\", \"2  8\", \"- - - -\"],[\"SET 6,H\", \"2  8\", \"- - - -\"],[\"SET 6,L\", \"2  8\", \"- - - -\"],[\"SET 6,(HL)\", \"2  16\", \"- - - -\"],[\"SET 6,A\", \"2  8\", \"- - - -\"],[\"SET 7,B\", \"2  8\", \"- - - -\"],[\"SET 7,C\", \"2  8\", \"- - - -\"],[\"SET 7,D\", \"2  8\", \"- - - -\"],[\"SET 7,E\", \"2  8\", \"- - - -\"],[\"SET 7,H\", \"2  8\", \"- - - -\"],[\"SET 7,L\", \"2  8\", \"- - - -\"],[\"SET 7,(HL)\", \"2  16\", \"- - - -\"],[\"SET 7,A\", \"2  8\", \"- - - -\"],];\n\n\n\n//# sourceURL=webpack://GameBoy/./src/opcodes.js?");

/***/ }),

/***/ "./src/ppu.js":
/*!********************!*\
  !*** ./src/ppu.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PPU\": () => (/* binding */ PPU)\n/* harmony export */ });\n// const colors = [0xFF3DBAA2, 0xFF38AA92, 0xFF36603D, 0xFF14371B];\nconst colors = [0xFF0FBC9B, 0xFF0FAC8B, 0xFF306230, 0xFF0F380F, 0xFF9FDCCA];\n\nfunction makePalette(byte) {\n    return [byte & 0x03, byte >> 2 & 0x03, byte >> 4 & 0x03, byte >> 6];\n}\n\n\nclass PPU {\n    constructor(dmg) {\n        this.dmg = dmg;\n        this.mmu = dmg.mmu;\n        this.isDisplayEnabled = false;\n        this.enabled = true;\n    }\n\n    setContext(context) {\n        this.screenContext = context;\n        this.lineData = this.screenContext.createImageData(160, 1);\n        this.lineArray = new Uint32Array(this.lineData.data.buffer);\n    }\n\n    fetchTileLine(tileOffset, lineIndex, buffer, bufferOffset, palette = [0, 1, 2, 3]) {\n        const byte0 = this.mmu.memory[tileOffset + 2 * lineIndex];\n        const byte1 = this.mmu.memory[tileOffset + 2 * lineIndex + 1];\n        for (let i = 0; i < 8; i++) {\n            const j = 7 - i;\n            const shade = (byte0 & 1 << j | (byte1 & 1 << j) << 1) >> j;\n            buffer[bufferOffset + i] = colors[palette[shade]];\n        }\n    }\n\n    drawLine(ly) {\n        if (!this.enabled || !this.isDisplayEnabled) return;\n        const bgTileMapOffset = (this.mmu.memory[0xff40] & 0x08 ? 0x9c00 : 0x9800);\n        const bgPalette = [\n            this.mmu.memory[0xff47] & 0x03,\n            (this.mmu.memory[0xff47] >> 2) & 0x03,\n            (this.mmu.memory[0xff47] >> 4) & 0x03,\n            this.mmu.memory[0xff47] >> 6,\n        ];\n        const bgY = (ly + this.mmu.memory[0xff42]) & 0xff;\n        const tileY = bgY >> 3;\n        const tileLine = bgY % 8;\n        let tileX = this.mmu.memory[0xff43] >> 3;\n        let lineX = -(this.mmu.memory[0xff43] & 0x0f);\n\n        while (lineX < 160) {\n            const tileIndex = this.mmu.memory[bgTileMapOffset + tileY * 32 + tileX];\n            const tileDataOffset = this.mmu.memory[0xff40] & 0x10 ? 0x8000 + tileIndex * 16 : 0x9000 + (tileIndex << 24 >> 24) * 16;\n            this.fetchTileLine(tileDataOffset, tileLine, this.lineArray, lineX, bgPalette);\n            tileX += 1;\n            tileX %= 32;\n            lineX += 8;\n        }\n        this.screenContext.putImageData(this.lineData, 0, ly);\n    }\n\n    setDisplayEnabled(val) {\n        if (val) {\n            this.isDisplayEnabled = true;\n        } else {\n            this.isDisplayEnabled = false;\n            this.screenContext.fillStyle = \"#CADC9F\";\n            this.screenContext.fillRect(0, 0, 160, 144);\n        }\n    }\n\n    displayTiles() {\n        const tilesCanvas = document.getElementById(\"tiles\");\n        const tilesContext = tilesCanvas.getContext('2d');\n        const tilesData = tilesContext.createImageData(128, 192);\n        const tilesArray = new Uint32Array(tilesData.data.buffer);\n        for (let tileIndex = 0; tileIndex < 384; tileIndex++) {\n            for (let lineIndex = 0; lineIndex < 8; lineIndex++) {\n                this.fetchTileLine(\n                    0x8000 + 16 * tileIndex,\n                    lineIndex,\n                    tilesArray,\n                    (~~(tileIndex / 16) * 8 + lineIndex) * 128 + (tileIndex % 16) * 8\n                );\n            }\n        }\n        tilesContext.putImageData(tilesData, 0, 0);\n    }\n\n    displayBG() {\n        const bgCanvas = document.getElementById(\"background\");\n        const bgContext = bgCanvas.getContext('2d');\n        const bgData = bgContext.createImageData(256, 256);\n        const bgArray = new Uint32Array(bgData.data.buffer);\n        const tileMapOffset = this.mmu.memory[0xff40] & 0x08 ? 0x9c00 : 0x9800;\n        const palette = makePalette(this.mmu.memory[0xff47]);\n        let offset = 0;\n        let tileOffset;\n        for (let ty = 0; ty < 32; ty++) {\n            for (let lineIndex = 0; lineIndex < 8; lineIndex++) {\n                for (let tx = 0; tx < 32; tx++) {\n                    const tileIndex = this.mmu.memory[tileMapOffset + 32 * ty + tx];\n                    if (this.mmu.memory[0xff40] & 0x10) {\n                        tileOffset = 0x8000 + 16 * tileIndex;\n                    } else {\n                        tileOffset = 0x9000 + 16 * (tileIndex << 24 >> 24);\n                    }\n                    this.fetchTileLine(\n                        tileOffset,\n                        lineIndex,\n                        bgArray,\n                        offset,\n                        palette,\n                    )\n                    offset += 8;\n                }\n            }\n        }\n        bgContext.putImageData(bgData, 0, 0);\n    }\n}\n\n\n\n//# sourceURL=webpack://GameBoy/./src/ppu.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;